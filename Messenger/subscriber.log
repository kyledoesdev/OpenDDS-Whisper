(22249|22249) NOTICE: not using file configuration - no configuration file specified.
(22249|22249) NOTICE: Service_Participant::get_domain_participant_factory - This is OpenDDS 3.16.1 using ACE 6.2a_p21.
(22249|22249) NOTICE: Service_Participant::intializeScheduling() - no scheduling policy specified, not setting policy.
(22249|22249) Service_Participant::set_repo_ior: Repo[ DEFAULT_REPO] == file://repo.ior
(22249|22249) [repository/DEFAULT_REPO]: RepositoryIor == file://repo.ior
(22249|22249) Service_Participant::get_discovery: returning default repository for domain 42.
TAO (22249|22249) - Did not find default svc.conf
TAO (22249|22249) - Completed initializing the process-wide service context
TAO (22249|22249) - Default ORB services initialization begins
TAO (22249|22249) - ORBInitializer_Registry::register_orb_initializer 0 @0x56335744cf10
TAO (22249|22249) - ORBInitializer_Registry::register_orb_initializer 1 @0x56335744c570
TAO (22249|22249) - Default ORB services initialization completed
TAO (22249|22249) - We are the default ORB ...
TAO (22249|22249) - Initializing the orb-specific services
TAO (22249|22249) - TAO_Time_Policy_Manager: loaded time policy strategy 'TAO_SYSTEM_TIME_POLICY'
TAO (22249|22249) - Default_Resource_Factory - codeset manager=0x563357460b60
TAO (22249|22249) - Codeset_Manager_i::init_ccs, Loaded Codeset translator <UTF8_Latin1_Factory>, ncs = 00010001 tcs = 05010001
TAO (22249|22249) - UTF16_BOM_Translator: forceBE 0
TAO (22249|22249) - Loaded default protocol <IIOP_Factory>
TAO (22249|22249) - Created new ORB <OpenDDS_DCPS>
TAO (22249|22249) - IIOP_Acceptor::open_i, listening on: <yan-VirtualBox:35617>
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x5748c150
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::fill_set_i, current_size = 0, cache_maximum = 512
TAO (22249|22249) - Transport_Cache_Manager_T::purge, Cache size after purging is [0]
TAO (22249|22249) - TAO_Connector::connect: make_new_connection = 1 busy_count = 0
TAO (22249|22249) - IIOP_Connector::begin_connection, to <yan-VirtualBox:46009> which should block
TAO (22249|22249) - TAO_LF_CH_Event[0]::state_changed_i, state LFS_IDLE->LFS_CONNECTION_WAIT
TAO (22249|22249) - IIOP_Connection_Handler[1464381152]::IIOP_Connection_Handler, this=0x56335748ad70
TAO (22249|22249) - Transport_Connector::wait_for_connection_completion, transport [1464381152], Connection not complete.
TAO (22249|22249) - Cache_IntId_T::Cache_IntId_T, this=0x7ffde435e500 Transport[1464381152] is not connected
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_UNKNOWN->ENTRY_CONNECTING Transport[1464381152] IntId=0x7ffde435e500
TAO (22249|22249) - Transport_Cache_Manager_T::bind_i, Transport[1464381152] @ hash:index{2130752698:0}
TAO (22249|22249) - Transport_Cache_Manager_T::bind_i: Success Transport[1464381152] @ hash:index{2130752698:0}. Cache size is [1]
TAO (22249|22249) - Transport_Connector::wait_for_connection_completion, going to wait for connection completion on transport[1464381152]
TAO (22249|22249) - Leader_Follower[1464381152]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - IIOP_Connection_Handler::open, The local addr is <127.0.0.1:58925>
TAO (22249|22252) - IIOP_Connection_Handler::open, IIOP connection to peer <127.0.1.1:46009> on 12
TAO (22249|22252) - Transport::post_open, tport id changed from 1464381152 to 12
TAO (22249|22252) - Transport_Cache_Manager_T::mark_connected, true Transport[12]
TAO (22249|22252) - Cache_IntId_T::recycle_state, ENTRY_CONNECTING->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22252) - TAO_LF_CH_Event[12]::state_changed_i, state LFS_CONNECTION_WAIT->LFS_SUCCESS
TAO (22249|22249) - Leader_Follower[1464381152]::wait_for_event, done (follower), successful 1
TAO (22249|22249) - Transport_Connector::wait_for_connection_completion, transport [12], wait done result = 0
TAO (22249|22249) - IIOP_Connector::make_connection, new connected connection to <yan-VirtualBox:46009> on Transport[12]
TAO (22249|22249) - Transport[12]::register_handler
TAO (22249|22249) - Transport[12]::register_handler - registering event handler with reactor
TAO (22249|22249) - Transport_Connector::connect, opening Transport[12] in TAO_CLIENT_ROLE
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Codeset_Manager_i::set_tcs, setting char translator (00010001)
TAO (22249|22249) - Codeset_Manager_i::set_tcs, setting wchar translator (00010109)
TAO (22249|22249) - Muxed_TMS[12]::request_id, <1>
TAO (22249|22249) - Codeset_Manager_i::generate_service_context, using tcs_c <ISO8859_1> (00010001), tcs_w <UTF-16> (00010109)
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 144 data bytes, my endian, Type Request[1]
GIOP message - HEXDUMP 156 bytes
47 49 4f 50 01 02 01 00  90 00 00 00 01 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
17 00 00 00 61 64 64 5f  64 6f 6d 61 69 6e 5f 70   ....add_domain_p
61 72 74 69 63 69 70 61  6e 74 00 00 01 00 00 00   articipant......
01 00 00 00 0c 00 00 00  01 31 29 2c 01 00 01 00   .........1),....
09 01 01 00 00 00 00 00  2a 00 00 00 00 00 00 00   ........*.......
01 00 00 00 00 00 00 00  00 00 00 00               ............    
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 156 bytes
TAO - Transport[12]::drain_queue_helper (0/156) - HEXDUMP 156 bytes
47 49 4f 50 01 02 01 00  90 00 00 00 01 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
17 00 00 00 61 64 64 5f  64 6f 6d 61 69 6e 5f 70   ....add_domain_p
61 72 74 69 63 69 70 61  6e 74 00 00 01 00 00 00   articipant......
01 00 00 00 0c 00 00 00  01 31 29 2c 01 00 01 00   .........1),....
09 01 01 00 00 00 00 00  2a 00 00 00 00 00 00 00   ........*.......
01 00 00 00 00 00 00 00  00 00 00 00               ............    
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 156
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 156, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 41 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 29 data bytes, my endian, Type Reply[1]
GIOP message - HEXDUMP 41 bytes
47 49 4f 50 01 02 01 01  1d 00 00 00 01 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 01 c1  00                        .........       
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 1
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) DomainParticipantImpl::enable: enabled participant 01030000.1ea0dec0.00000002.000001c1(315d18a2) in domain 42
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <2>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 289 data bytes, my endian, Type Request[2]
GIOP message - HEXDUMP 301 bytes
47 49 4f 50 01 02 01 00  21 01 00 00 02 00 00 00   GIOP....!.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 10 00 00 00   ................
44 43 50 53 50 61 72 74  69 63 69 70 61 6e 74 00   DCPSParticipant.
20 00 00 00 50 41 52 54  49 43 49 50 41 4e 54 5f    ...PARTICIPANT_
42 55 49 4c 54 5f 49 4e  5f 54 4f 50 49 43 5f 54   BUILT_IN_TOPIC_T
59 50 45 00 00 00 00 00  00 00 00 00 00 00 00 00   YPE.............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 301 bytes
TAO - Transport[12]::drain_queue_helper (0/301) - HEXDUMP 301 bytes
47 49 4f 50 01 02 01 00  21 01 00 00 02 00 00 00   GIOP....!.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 10 00 00 00   ................
44 43 50 53 50 61 72 74  69 63 69 70 61 6e 74 00   DCPSParticipant.
20 00 00 00 50 41 52 54  49 43 49 50 41 4e 54 5f    ...PARTICIPANT_
42 55 49 4c 54 5f 49 4e  5f 54 4f 50 49 43 5f 54   BUILT_IN_TOPIC_T
59 50 45 00 00 00 00 00  00 00 00 00 00 00 00 00   YPE.............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 301
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 301, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[2]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 02 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 01 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 2
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <3>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 313 data bytes, my endian, Type Request[3]
GIOP message - HEXDUMP 325 bytes
47 49 4f 50 01 02 01 00  39 01 00 00 03 00 00 00   GIOP....9.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 1b 00 00 00   ................
4f 70 65 6e 44 44 53 50  61 72 74 69 63 69 70 61   OpenDDSParticipa
6e 74 4c 6f 63 61 74 69  6f 6e 00 50 29 00 00 00   ntLocation.P)...
50 41 52 54 49 43 49 50  41 4e 54 5f 4c 4f 43 41   PARTICIPANT_LOCA
54 49 4f 4e 5f 42 55 49  4c 54 5f 49 4e 5f 54 4f   TION_BUILT_IN_TO
50 49 43 5f 54 59 50 45  00 00 00 00 00 00 00 00   PIC_TYPE........
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 325 bytes
TAO - Transport[12]::drain_queue_helper (0/325) - HEXDUMP 325 bytes
47 49 4f 50 01 02 01 00  39 01 00 00 03 00 00 00   GIOP....9.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 1b 00 00 00   ................
4f 70 65 6e 44 44 53 50  61 72 74 69 63 69 70 61   OpenDDSParticipa
6e 74 4c 6f 63 61 74 69  6f 6e 00 50 29 00 00 00   ntLocation.P)...
50 41 52 54 49 43 49 50  41 4e 54 5f 4c 4f 43 41   PARTICIPANT_LOCA
54 49 4f 4e 5f 42 55 49  4c 54 5f 49 4e 5f 54 4f   TION_BUILT_IN_TO
50 49 43 5f 54 59 50 45  00 00 00 00 00 00 00 00   PIC_TYPE........
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 325
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 325, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[3]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 03 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 02 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 3
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <4>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 301 data bytes, my endian, Type Request[4]
GIOP message - HEXDUMP 313 bytes
47 49 4f 50 01 02 01 00  2d 01 00 00 04 00 00 00   GIOP....-.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 16 00 00 00   ................
4f 70 65 6e 44 44 53 49  6e 74 65 72 6e 61 6c 54   OpenDDSInternalT
68 72 65 61 64 00 74 69  24 00 00 00 49 4e 54 45   hread.ti$...INTE
52 4e 41 4c 5f 54 48 52  45 41 44 5f 42 55 49 4c   RNAL_THREAD_BUIL
54 5f 49 4e 5f 54 4f 50  49 43 5f 54 59 50 45 00   T_IN_TOPIC_TYPE.
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01                        .........       
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 313 bytes
TAO - Transport[12]::drain_queue_helper (0/313) - HEXDUMP 313 bytes
47 49 4f 50 01 02 01 00  2d 01 00 00 04 00 00 00   GIOP....-.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 16 00 00 00   ................
4f 70 65 6e 44 44 53 49  6e 74 65 72 6e 61 6c 54   OpenDDSInternalT
68 72 65 61 64 00 74 69  24 00 00 00 49 4e 54 45   hread.ti$...INTE
52 4e 41 4c 5f 54 48 52  45 41 44 5f 42 55 49 4c   RNAL_THREAD_BUIL
54 5f 49 4e 5f 54 4f 50  49 43 5f 54 59 50 45 00   T_IN_TOPIC_TYPE.
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01                        .........       
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 313
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 313, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[4]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 04 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 03 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 4
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <5>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 305 data bytes, my endian, Type Request[5]
GIOP message - HEXDUMP 317 bytes
47 49 4f 50 01 02 01 00  31 01 00 00 05 00 00 00   GIOP....1.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 18 00 00 00   ................
4f 70 65 6e 44 44 53 43  6f 6e 6e 65 63 74 69 6f   OpenDDSConnectio
6e 52 65 63 6f 72 64 00  26 00 00 00 43 4f 4e 4e   nRecord.&...CONN
45 43 54 49 4f 4e 5f 52  45 43 4f 52 44 5f 42 55   ECTION_RECORD_BU
49 4c 54 5f 49 4e 5f 54  4f 50 49 43 5f 54 59 50   ILT_IN_TOPIC_TYP
45 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   E...............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 317 bytes
TAO - Transport[12]::drain_queue_helper (0/317) - HEXDUMP 317 bytes
47 49 4f 50 01 02 01 00  31 01 00 00 05 00 00 00   GIOP....1.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 18 00 00 00   ................
4f 70 65 6e 44 44 53 43  6f 6e 6e 65 63 74 69 6f   OpenDDSConnectio
6e 52 65 63 6f 72 64 00  26 00 00 00 43 4f 4e 4e   nRecord.&...CONN
45 43 54 49 4f 4e 5f 52  45 43 4f 52 44 5f 42 55   ECTION_RECORD_BU
49 4c 54 5f 49 4e 5f 54  4f 50 49 43 5f 54 59 50   ILT_IN_TOPIC_TYP
45 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   E...............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 317
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 317, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[5]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 05 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 04 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 5
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <6>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 281 data bytes, my endian, Type Request[6]
GIOP message - HEXDUMP 293 bytes
47 49 4f 50 01 02 01 00  19 01 00 00 06 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 0a 00 00 00   ................
44 43 50 53 54 6f 70 69  63 00 6e 65 1a 00 00 00   DCPSTopic.ne....
54 4f 50 49 43 5f 42 55  49 4c 54 5f 49 4e 5f 54   TOPIC_BUILT_IN_T
4f 50 49 43 5f 54 59 50  45 00 4f 52 00 00 00 00   OPIC_TYPE.OR....
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 293 bytes
TAO - Transport[12]::drain_queue_helper (0/293) - HEXDUMP 293 bytes
47 49 4f 50 01 02 01 00  19 01 00 00 06 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 0a 00 00 00   ................
44 43 50 53 54 6f 70 69  63 00 6e 65 1a 00 00 00   DCPSTopic.ne....
54 4f 50 49 43 5f 42 55  49 4c 54 5f 49 4e 5f 54   TOPIC_BUILT_IN_T
4f 50 49 43 5f 54 59 50  45 00 4f 52 00 00 00 00   OPIC_TYPE.OR....
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 293
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 293, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[6]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 06 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 05 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 6
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <7>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 297 data bytes, my endian, Type Request[7]
GIOP message - HEXDUMP 309 bytes
47 49 4f 50 01 02 01 00  29 01 00 00 07 00 00 00   GIOP....).......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 11 00 00 00   ................
44 43 50 53 53 75 62 73  63 72 69 70 74 69 6f 6e   DCPSSubscription
00 4f 50 49 21 00 00 00  53 55 42 53 43 52 49 50   .OPI!...SUBSCRIP
54 49 4f 4e 5f 42 55 49  4c 54 5f 49 4e 5f 54 4f   TION_BUILT_IN_TO
50 49 43 5f 54 59 50 45  00 00 00 00 00 00 00 00   PIC_TYPE........
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 309 bytes
TAO - Transport[12]::drain_queue_helper (0/309) - HEXDUMP 309 bytes
47 49 4f 50 01 02 01 00  29 01 00 00 07 00 00 00   GIOP....).......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 11 00 00 00   ................
44 43 50 53 53 75 62 73  63 72 69 70 74 69 6f 6e   DCPSSubscription
00 4f 50 49 21 00 00 00  53 55 42 53 43 52 49 50   .OPI!...SUBSCRIP
54 49 4f 4e 5f 42 55 49  4c 54 5f 49 4e 5f 54 4f   TION_BUILT_IN_TO
50 49 43 5f 54 59 50 45  00 00 00 00 00 00 00 00   PIC_TYPE........
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01                                     .....           
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 309
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 309, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[7]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 07 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 06 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 7
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <8>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 289 data bytes, my endian, Type Request[8]
GIOP message - HEXDUMP 301 bytes
47 49 4f 50 01 02 01 00  21 01 00 00 08 00 00 00   GIOP....!.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 10 00 00 00   ................
44 43 50 53 50 75 62 6c  69 63 61 74 69 6f 6e 00   DCPSPublication.
20 00 00 00 50 55 42 4c  49 43 41 54 49 4f 4e 5f    ...PUBLICATION_
42 55 49 4c 54 5f 49 4e  5f 54 4f 50 49 43 5f 54   BUILT_IN_TOPIC_T
59 50 45 00 00 00 00 00  00 00 00 00 00 00 00 00   YPE.............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 301 bytes
TAO - Transport[12]::drain_queue_helper (0/301) - HEXDUMP 301 bytes
47 49 4f 50 01 02 01 00  21 01 00 00 08 00 00 00   GIOP....!.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 72 74 69 00 00 00 00  2a 00 00 00 01 03 00 00   .rti....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 10 00 00 00   ................
44 43 50 53 50 75 62 6c  69 63 61 74 69 6f 6e 00   DCPSPublication.
20 00 00 00 50 55 42 4c  49 43 41 54 49 4f 4e 5f    ...PUBLICATION_
42 55 49 4c 54 5f 49 4e  5f 54 4f 50 49 43 5f 54   BUILT_IN_TOPIC_T
59 50 45 00 00 00 00 00  00 00 00 00 00 00 00 00   YPE.............
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 01            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 301
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 301, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[8]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 08 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 07 c5               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 8
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) DDS::ParticipantBuiltinTopicDataDataReaderImpl::enable_specific-data Cached_Allocator_With_Overflow 574745f0 with 20 chunks
(22249|22249) DataReaderImpl::enable Cached_Allocator_With_Overflow 574770f0 with 20 chunks
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) TcpTransport::configure_i listening on 0.0.0.0:37801
(22249|22249) ip interface 127.0.0.1:0 maps to hostname localhost
(22249|22249) ip interface 10.0.2.15:0 maps to hostname yan-VirtualBox
(22249|22249) WARNING: Could not find FQDN. Using "yan-VirtualBox" as fully qualified hostname, please correct system configuration.
(22249|22249) TransportImpl::open()
   transport_type:               tcp
   name:                         _OPENDDS__BITTCPTransportInst_DEFAULT_REPO
   queue_messages_per_pool:      10
   queue_initial_pools:          5
   max_packet_size:              2147481599
   max_samples_per_packet:       10
   optimum_packet_size:          4096
   thread_per_connection:        false
   datalink_release_delay:       0
   datalink_control_chunks:      32

   local_address:                yan-VirtualBox:37801
   pub_address:                  
   enable_nagle_algorithm:       false
   conn_retry_initial_delay:     500
   conn_retry_backoff_multiplier:2
   conn_retry_attempts:          3
   passive_reconnect_duration:   2000
   max_output_pause_period:      -1
   active_conn_timeout_period:   5000
(22249|22249) TcpTransport public address string <yan-VirtualBox:37801>
(22249|22249) DataReaderImpl::setup_deserialization: Setup successfully with the following data representations: Unaligned CDR
TAO (22249|22249) - TAO_System_Id_With_Unique_Id_Strategy::bind_using_system_id: type=IDL:OpenDDS/DCPS/DataReaderRemote:1.0, id=0x010000
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x575a69a0
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <9>
TAO (22249|22249) - Listen_Point_List[0] = <yan-VirtualBox:35617>
TAO (22249|22249) - Muxed_TMS[12]::request_id, <10>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 628 data bytes, my endian, Type Request[10]
GIOP message - HEXDUMP 640 bytes
47 49 4f 50 01 02 01 00  74 02 00 00 0a 00 00 00   GIOP....t.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  01 00 00 00 05 00 00 00   tion............
1e 00 00 00 01 00 00 00  01 00 00 00 0f 00 00 00   ................
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 00 9d   yan-VirtualBox..
21 8b 00 00 50 55 42 4c  2a 00 00 00 01 03 00 00   !...PUBL*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 01 c5 26 00 00 00   ............&...
49 44 4c 3a 4f 70 65 6e  44 44 53 2f 44 43 50 53   IDL:OpenDDS/DCPS
2f 44 61 74 61 52 65 61  64 65 72 52 65 6d 6f 74   /DataReaderRemot
65 3a 31 2e 30 00 00 00  01 00 00 00 00 00 00 00   e:1.0...........
78 00 00 00 01 01 02 00  0f 00 00 00 79 61 6e 2d   x...........yan-
56 69 72 74 75 61 6c 42  6f 78 00 00 21 8b 00 00   VirtualBox..!...
23 00 00 00 14 01 0f 00  4e 53 54 04 4b 80 61 07   #.......NST.K.a.
64 07 00 01 00 00 00 01  00 00 00 00 00 00 00 01   d...............
00 00 00 01 00 00 00 00  02 00 00 00 00 00 00 00   ................
08 00 00 00 01 00 00 00  00 4f 41 54 01 00 00 00   .........OAT....
18 00 00 00 01 00 00 00  01 00 01 00 01 00 00 00   ................
01 00 01 05 09 01 01 00  00 00 00 00 01 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 01 00 00 00  04 00 00 00 74 63 70 00   ............tcp.
1d 00 00 00 01 00 00 00  15 00 00 00 79 61 6e 2d   ............yan-
56 69 72 74 75 61 6c 42  6f 78 3a 33 37 38 30 31   VirtualBox:37801
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   ................
01 00 00 00 00 00 00 00  00 00 00 00 50 00 00 00   ............P...
4c 00 00 00 01 10 00 40  24 00 00 00 20 00 00 00   L......@$... ...
14 00 00 00 f1 3c 0b 7b  bc 87 15 85 68 48 08 8e   .....<.{....hH..
a8 87 aa 00 51 00 00 00  00 00 00 00 00 00 00 00   ....Q...........
02 10 00 40 18 00 00 00  14 00 00 00 08 00 00 00   ...@............
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 2 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/2 has 484 bytes
TAO - Transport[12]::drain_queue_helper (0/484) - HEXDUMP 484 bytes
47 49 4f 50 01 02 01 00  74 02 00 00 0a 00 00 00   GIOP....t.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  01 00 00 00 05 00 00 00   tion............
1e 00 00 00 01 00 00 00  01 00 00 00 0f 00 00 00   ................
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 00 9d   yan-VirtualBox..
21 8b 00 00 50 55 42 4c  2a 00 00 00 01 03 00 00   !...PUBL*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 01 c5 26 00 00 00   ............&...
49 44 4c 3a 4f 70 65 6e  44 44 53 2f 44 43 50 53   IDL:OpenDDS/DCPS
2f 44 61 74 61 52 65 61  64 65 72 52 65 6d 6f 74   /DataReaderRemot
65 3a 31 2e 30 00 00 00  01 00 00 00 00 00 00 00   e:1.0...........
78 00 00 00 01 01 02 00  0f 00 00 00 79 61 6e 2d   x...........yan-
56 69 72 74 75 61 6c 42  6f 78 00 00 21 8b 00 00   VirtualBox..!...
23 00 00 00 14 01 0f 00  4e 53 54 04 4b 80 61 07   #.......NST.K.a.
64 07 00 01 00 00 00 01  00 00 00 00 00 00 00 01   d...............
00 00 00 01 00 00 00 00  02 00 00 00 00 00 00 00   ................
08 00 00 00 01 00 00 00  00 4f 41 54 01 00 00 00   .........OAT....
18 00 00 00 01 00 00 00  01 00 01 00 01 00 00 00   ................
01 00 01 05 09 01 01 00  00 00 00 00 01 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
ff ff ff 7f ff ff ff 7f  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 01 00 00 00  04 00 00 00 74 63 70 00   ............tcp.
1d 00 00 00                                        ....            
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 1/2 has 156 bytes
TAO - Transport[12]::drain_queue_helper (0/156) - HEXDUMP 156 bytes
01 00 00 00 15 00 00 00  79 61 6e 2d 56 69 72 74   ........yan-Virt
75 61 6c 42 6f 78 3a 33  37 38 30 31 00 00 00 00   ualBox:37801....
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 01 00 00 00  00 00 00 00 01 00 00 00   ................
00 00 00 00 00 00 00 00  50 00 00 00 4c 00 00 00   ........P...L...
01 10 00 40 24 00 00 00  20 00 00 00 14 00 00 00   ...@$... .......
f1 3c 0b 7b bc 87 15 85  68 48 08 8e a8 87 aa 00   .<.{....hH......
51 00 00 00 00 00 00 00  00 00 00 00 02 10 00 40   Q..............@
18 00 00 00 14 00 00 00  08 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00               ............    
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 640
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 640, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) DBG:   TcpConnection::passive_open.
(22249|22256) DBG:   TcpConnection::open passive handle=18.
(22249|22256) DBG:   TcpConnection::handle_setup_input 0x7fb630002d10 recv returned 4 Success.
(22249|22256) DBG:   TcpConnection::handle_setup_input 0x7fb630002d10 recv returned 25 Success.
(22249|22256) DBG:   TcpConnection::handle_setup_input 0x7fb630002d10 127.0.1.1:33093->127.0.1.1:37801, priority==0, reconnect_state = INIT_STATE
(22249|22256) NetworkAddress addr: yan-VirtualBox:33093 reserved: 0
(22249|22256) TcpTransport::passive_connection() - established with yan-VirtualBox:33093.
(22249|22256) TcpTransport::passive_connection() - # of before connections: 0
(22249|22256) TcpTransport::passive_connection() - # of after connections: 1
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 429 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 417 data bytes, my endian, Type Request[1]
GIOP message - HEXDUMP 429 bytes
47 49 4f 50 01 02 01 00  a1 01 00 00 01 00 00 00   GIOP............
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 00 00 00 00 01  00 00 00 01 00 00 00 52   ...............R
10 00 00 00 61 64 64 5f  61 73 73 6f 63 69 61 74   ....add_associat
69 6f 6e 00 01 00 00 00  01 00 00 00 0c 00 00 00   ion.............
01 00 00 00 01 00 01 00  09 01 01 00 18 00 00 00   ................
01 03 00 00 1e a0 de c0  00 00 00 02 00 00 01 c7   ................
01 00 00 00 04 00 00 00  74 63 70 00 1d 00 00 00   ........tcp.....
01 00 50 4d 15 00 00 00  79 61 6e 2d 56 69 72 74   ..PM....yan-Virt
75 61 6c 42 6f 78 3a 33  33 30 39 33 00 00 00 00   ualBox:33093....
ff ff ff ff 01 03 00 00  1e a0 de c0 00 00 00 01   ................
00 00 01 c2 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 01 00 00 00  00 00 00 00 00 e1 f5 05   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  50 00 00 00 4c 00 00 00   ........P...L...
01 10 00 40 24 00 00 00  20 00 00 00 14 00 00 00   ...@$... .......
f1 3c 0b 7b bc 87 15 85  68 48 08 8e a8 87 aa 00   .<.{....hH......
51 00 00 00 00 00 00 00  00 00 00 00 02 10 00 40   Q..............@
18 00 00 00 14 00 00 00  08 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00            .............   
TAO (22249|22252) - Codeset_Manager_i::process_service_context, using tcsc <ISO8859_1> (00010001), tcsw <UTF-16> (00010109)
(22249|22252) DataReaderRemoteImpl::add_association - local 01030000.1ea0dec0.00000002.000001c7(d83ebd97) remote 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22252) DataReaderImpl::add_association - bit 1 local 01030000.1ea0dec0.00000002.000001c7(d83ebd97) remote 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22252) WriterInfo::WriterInfo: writer 01030000.1ea0dec0.00000001.000001c2(eff433c8) added to reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97).
(22249|22252) DataReaderImpl::add_association: inserted writer 01030000.1ea0dec0.00000001.000001c2(eff433c8).return 1
(22249|22252) DataReaderImpl::add_association: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) is associated with writer 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22252) TransportClient::associate added PendingAssoc between 01030000.1ea0dec0.00000002.000001c7(d83ebd97) and remote 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22252) TcpTransport::accept_datalink local 01030000.1ea0dec0.00000002.000001c7(d83ebd97) accepting connection from remote 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22252) TcpTransport::accept_datalink PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22252) TcpTransport::accept_datalink create new link[0x7fb6380061d0]
(22249|22252) TcpTransport::connect_tcp_datalink() [1] - creating send strategy with priority 0.
(22249|22252) DirectPriorityMapper:thread_priority() - mapped TRANSPORT_PRIORITY value 0 to thread priority 0.
(22249|22252) ReactorSynch::ReactorSynch() [0] - establishing synch without a worker.
(22249|22252) TransportReceiveStrategy-mb Cached_Allocator_With_Overflow 38009f38 with 1000 chunks
(22249|22252) TransportReceiveStrategy-db Cached_Allocator_With_Overflow 38009fd8 with 100 chunks
(22249|22252) TransportReceiveStrategy-data Cached_Allocator_With_Overflow 3800a078 with 100 chunks
(22249|22252) TcpReceiveStrategy::start_i() - link:
   There are 0 local entities currently using this link
 connected to yan-VirtualBox:33093 registering with reactor to receive.
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, Becoming client leader.
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) enter reactor event loop
(22249|22252) TransportClient::use_datalink_i TransportClient(0x56335749de60) using datalink[0x7fb6380061d0] from 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22252) TransportClient::use_datalink_i TransportClient(0x56335749de60) about to add_link[0x7fb6380061d0] to remote: 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22251) EndHistoricSamplesMissedSweeper::ScheduleCommand::execute() - Scheduled sweeper 1
(22249|22252) DataLink::make_reservation() - creating association local subscription 01030000.1ea0dec0.00000002.000001c7(d83ebd97) <--> with remote publication  01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22252) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[0].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[1].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[2].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[3].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[4].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[5].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[6].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[7].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[8].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[9].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[10].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[11].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[12].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[13].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[14].
(22249|22256) DBG:   Allocate a Message_Block for new receive_buffer_[15].
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==65536, base==3eb63010
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 316 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 316 amount == 316.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052127248.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052127248.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052127564.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127248.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
02 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127276.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
06 00 01 00 10 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 01 00 00 01 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 01 c7  44 43 50 53 02 00 01 00   ........DCPS....
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127316.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127316 this->payload_->wr_ptr() == 1052127332.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127332.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DBG:  received REQUEST_ACK
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Let's try to do some more.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127332.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  78 00 00 00 00 00 00 00   DCPS....x.......
03 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 120.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127360.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 05 00 14 00 00 00  00 00 00 00 02 00 00 00   ................
04 4b 80 61 00 64 ee 1b  01 03 00 00 1e a0 de c0   .K.a.d..........
00 00 00 01 00 00 01 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 01 c1  00 00 00 00 00 00 05 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 20 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 80.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127400.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   amount of data for the next block in the chain is 20
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127400 this->payload_->wr_ptr() == 1052127420.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127420.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 60
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000001c2(eff433c8) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x02, Timestamp: 1635797764.468608000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x02, Timestamp: 1635797764.468608000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127420.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 05 00 14 00 00 00  00 00 00 00 04 00 00 00   ................
04 4b 80 61 10 a9 66 1c  01 03 00 00 1e a0 de c0   .K.a..f.........
00 00 00 01 00 00 01 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 c1  00 00 00 00 44 43 50 53   ............DCPS
(22249|22256) DBG:   The demarshalled sample header says that we have 20 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 20.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127460.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   amount of data for the next block in the chain is 20
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127460 this->payload_->wr_ptr() == 1052127480.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127480.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000001c2(eff433c8) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x04, Timestamp: 1635797764.476490000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x04, Timestamp: 1635797764.476490000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Let's try to do some more.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127480.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
04 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127508.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
0b 00 01 00 10 00 00 00  ff ff ff ff 00 00 00 00   ................
04 4b 80 61 a0 a5 33 1d  01 03 00 00 1e a0 de c0   .K.a..3.........
00 00 00 01 00 00 01 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 01 c7  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127548.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127548 this->payload_->wr_ptr() == 1052127564.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127564.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127564.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000001c2(eff433c8) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.489924000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.489924000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) Received END_HISTORIC_SAMPLES control message
(22249|22251) EndHistoricSamplesMissedSweeper::CancelCommand::execute() - Unscheduled sweeper 1
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22252) TcpTransport::accept_datalink connected link 0x7fb6380061d0.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22249) - Transport[12]::handle_input
TAO (22249|22249) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22249) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22249) - Transport[12]::handle_input_parse_data, read 40 bytes
TAO (22249|22249) - GIOP_Message_State::parse_message_header_i
TAO (22249|22249) - GIOP_Message_State::get_version_info
TAO (22249|22249) - GIOP_Message_State::get_byte_order_info
TAO (22249|22249) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22249) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 28 data bytes, my endian, Type Reply[10]
GIOP message - HEXDUMP 40 bytes
47 49 4f 50 01 02 01 01  1c 00 00 00 0a 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 01 c7                            ........        
TAO (22249|22249) - TAO_Muxed_TMS::dispatch_reply, id = 10
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) exit reactor event loop
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (client) waking and yielding to allow event thread leadership
(22249|22249) SubscriberImpl::reader_enabled, datareader(topic_name=DCPSParticipant) enabled
(22249|22249) DDS::TopicBuiltinTopicDataDataReaderImpl::enable_specific-data Cached_Allocator_With_Overflow 57593050 with 20 chunks
(22249|22249) DataReaderImpl::enable Cached_Allocator_With_Overflow 57592fd0 with 20 chunks
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) TcpTransport public address string <yan-VirtualBox:37801>
(22249|22249) DataReaderImpl::setup_deserialization: Setup successfully with the following data representations: Unaligned CDR
TAO (22249|22249) - TAO_System_Id_With_Unique_Id_Strategy::bind_using_system_id: type=IDL:OpenDDS/DCPS/DataReaderRemote:1.0, id=0x020000
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x575a9840
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <12>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 588 data bytes, my endian, Type Request[12]
GIOP message - HEXDUMP 600 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 0c 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 05 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 01 00 00 00 01  00 00 00 02 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   ................
00 00 00 00 50 00 00 00  4c 00 00 00 01 10 00 40   ....P...L......@
24 00 00 00 20 00 00 00  14 00 00 00 f1 8a fb b1   $... ...........
a7 75 46 29 11 0c e2 a4  70 9c 17 00 11 02 00 00   .uF)....p.......
00 00 00 00 00 00 00 00  02 10 00 40 18 00 00 00   ...........@....
14 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 2 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/2 has 509 bytes
TAO - Transport[12]::drain_queue_helper (0/509) - HEXDUMP 509 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 0c 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 05 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 01 00 00 00 01  00 00 00 02 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 1/2 has 91 bytes
TAO - Transport[12]::drain_queue_helper (0/91) - HEXDUMP 91 bytes
00 00 00 00 00 00 00 50  00 00 00 4c 00 00 00 01   .......P...L....
10 00 40 24 00 00 00 20  00 00 00 14 00 00 00 f1   ..@$... ........
8a fb b1 a7 75 46 29 11  0c e2 a4 70 9c 17 00 11   ....uF)....p....
02 00 00 00 00 00 00 00  00 00 00 02 10 00 40 18   ..............@.
00 00 00 14 00 00 00 08  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00                  ...........     
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 600
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 600, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x02, Timestamp: 1635797764.468608000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) DataReaderImpl::writer_became_alive: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) from writer 01030000.1ea0dec0.00000001.000001c2(eff433c8) previous state NOT_SET.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1000.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000001c7(d83ebd97), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000001c2(eff433c8)] == ALIVE
(22249|22251) DataReaderImpl::handle_timeout: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) has 0 live writers; from_reactor=0
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 405 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 393 data bytes, my endian, Type Request[3]
GIOP message - HEXDUMP 405 bytes
47 49 4f 50 01 02 01 00  89 01 00 00 03 00 00 00   GIOP............
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 01 00 00 00 01  00 00 00 02 00 00 00 52   ...............R
10 00 00 00 61 64 64 5f  61 73 73 6f 63 69 61 74   ....add_associat
69 6f 6e 00 00 00 00 00  01 03 00 00 1e a0 de c0   ion.............
00 00 00 02 00 00 02 c7  01 00 00 00 04 00 00 00   ................
74 63 70 00 1d 00 00 00  01 00 00 00 15 00 00 00   tcp.............
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 3a 33   yan-VirtualBox:3
33 30 39 33 00 00 00 00  ff ff ff ff 01 03 00 00   3093............
1e a0 de c0 00 00 00 01  00 00 02 c2 00 00 00 00   ................
00 00 ff ff 00 00 00 00  00 00 00 00 01 00 00 01   ................
01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 01 00 00 00   ................
00 00 00 00 00 e1 f5 05  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
50 00 00 00 4c 00 00 00  01 10 00 40 24 00 00 00   P...L......@$...
20 00 00 00 14 00 00 00  f1 8a fb b1 a7 75 46 29    ............uF)
11 0c e2 a4 70 9c 17 00  11 02 00 00 00 00 00 00   ....p...........
00 00 00 00 02 10 00 40  18 00 00 00 14 00 00 00   .......@........
08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00                                     .....           
(22249|22252) DataReaderRemoteImpl::add_association - local 01030000.1ea0dec0.00000002.000002c7(f313ee54) remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22252) DataReaderImpl::add_association - bit 1 local 01030000.1ea0dec0.00000002.000002c7(f313ee54) remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22252) WriterInfo::WriterInfo: writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) added to reader 01030000.1ea0dec0.00000002.000002c7(f313ee54).
(22249|22252) DataReaderImpl::add_association: inserted writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b).return 1
(22249|22252) DataReaderImpl::add_association: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) is associated with writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22252) TransportClient::associate added PendingAssoc between 01030000.1ea0dec0.00000002.000002c7(f313ee54) and remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22252) TcpTransport::accept_datalink local 01030000.1ea0dec0.00000002.000002c7(f313ee54) accepting connection from remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22252) TcpTransport::accept_datalink PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22252) TcpTransport::accept_datalink found datalink link[0x7fb6380061d0]
(22249|22252) TransportClient::use_datalink_i TransportClient(0x5633575a7220) using datalink[0x7fb6380061d0] from 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22252) TransportClient::use_datalink_i TransportClient(0x5633575a7220) about to add_link[0x7fb6380061d0] to remote: 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22251) EndHistoricSamplesMissedSweeper::ScheduleCommand::execute() - Scheduled sweeper 2
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, Becoming client leader.
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) enter reactor event loop
(22249|22252) DataLink::make_reservation() - creating association local subscription 01030000.1ea0dec0.00000002.000002c7(f313ee54) <--> with remote publication  01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22252) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) writer 01030000.1ea0dec0.00000001.000001c2(eff433c8) instance 2 is_new_instance 1 filtered 0
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: SAMPLE_DATA (0x00), Length: 20, Byte order: Little Endian, Historic, Sequence: 0x04, Timestamp: 1635797764.476490000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) writer 01030000.1ea0dec0.00000001.000001c2(eff433c8) instance 3 is_new_instance 1 filtered 0
(22249|22256) Resumed sample processing for durable writer 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==65220, base==3eb6314c
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 168 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 168 amount == 168.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052127564.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052127564.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052127732.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127564.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
05 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127592.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
06 00 01 00 10 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 02 c7  44 43 50 53 02 00 01 00   ........DCPS....
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127632.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127632 this->payload_->wr_ptr() == 1052127648.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127648.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DBG:  received REQUEST_ACK
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Let's try to do some more.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127648.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
06 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127676.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
0b 00 01 00 10 00 00 00  ff ff ff ff 00 00 00 00   ................
04 4b 80 61 20 bc 8d 1d  01 03 00 00 1e a0 de c0   .K.a ...........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 02 c7  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127716.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127716 this->payload_->wr_ptr() == 1052127732.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127732.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127732.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.495828000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.495828000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) Received END_HISTORIC_SAMPLES control message
(22249|22251) EndHistoricSamplesMissedSweeper::CancelCommand::execute() - Unscheduled sweeper 2
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22249) - Transport[12]::handle_input
TAO (22249|22249) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22249) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22249) - Transport[12]::handle_input_parse_data, read 40 bytes
TAO (22249|22249) - GIOP_Message_State::parse_message_header_i
TAO (22249|22249) - GIOP_Message_State::get_version_info
TAO (22249|22249) - GIOP_Message_State::get_byte_order_info
TAO (22249|22249) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22249) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 28 data bytes, my endian, Type Reply[12]
GIOP message - HEXDUMP 40 bytes
47 49 4f 50 01 02 01 01  1c 00 00 00 0c 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 02 c7                            ........        
TAO (22249|22249) - TAO_Muxed_TMS::dispatch_reply, id = 12
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) exit reactor event loop
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (client) waking and yielding to allow event thread leadership
(22249|22249) SubscriberImpl::reader_enabled, datareader(topic_name=DCPSTopic) enabled
(22249|22249) DDS::PublicationBuiltinTopicDataDataReaderImpl::enable_specific-data Cached_Allocator_With_Overflow 57592ed0 with 20 chunks
(22249|22249) DataReaderImpl::enable Cached_Allocator_With_Overflow 57592e50 with 20 chunks
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) TcpTransport public address string <yan-VirtualBox:37801>
(22249|22249) DataReaderImpl::setup_deserialization: Setup successfully with the following data representations: Unaligned CDR
TAO (22249|22249) - TAO_System_Id_With_Unique_Id_Strategy::bind_using_system_id: type=IDL:OpenDDS/DCPS/DataReaderRemote:1.0, id=0x030000
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x575adf30
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <14>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 588 data bytes, my endian, Type Request[14]
GIOP message - HEXDUMP 600 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 0e 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 07 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 02 00 00 00 01  00 00 00 03 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   ................
00 00 00 00 50 00 00 00  4c 00 00 00 01 10 00 40   ....P...L......@
24 00 00 00 20 00 00 00  14 00 00 00 f1 af a9 15   $... ...........
45 f5 1d 78 a2 0f c9 1a  41 f1 d8 00 71 02 00 00   E..x....A...q...
00 00 00 00 00 00 00 00  02 10 00 40 18 00 00 00   ...........@....
14 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 2 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/2 has 509 bytes
TAO - Transport[12]::drain_queue_helper (0/509) - HEXDUMP 509 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 0e 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 07 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 02 00 00 00 01  00 00 00 03 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 1/2 has 91 bytes
TAO - Transport[12]::drain_queue_helper (0/91) - HEXDUMP 91 bytes
00 00 00 00 00 00 00 50  00 00 00 4c 00 00 00 01   .......P...L....
10 00 40 24 00 00 00 20  00 00 00 14 00 00 00 f1   ..@$... ........
af a9 15 45 f5 1d 78 a2  0f c9 1a 41 f1 d8 00 71   ...E..x....A...q
02 00 00 00 00 00 00 00  00 00 00 02 10 00 40 18   ..............@.
00 00 00 14 00 00 00 08  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00                  ...........     
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 600
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 600, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) Resumed sample processing for durable writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 405 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 393 data bytes, my endian, Type Request[5]
GIOP message - HEXDUMP 405 bytes
47 49 4f 50 01 02 01 00  89 01 00 00 05 00 00 00   GIOP............
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 02 00 00 00 01  00 00 00 03 00 00 00 52   ...............R
10 00 00 00 61 64 64 5f  61 73 73 6f 63 69 61 74   ....add_associat
69 6f 6e 00 00 00 00 00  01 03 00 00 1e a0 de c0   ion.............
00 00 00 02 00 00 03 c7  01 00 00 00 04 00 00 00   ................
74 63 70 00 1d 00 00 00  01 00 00 00 15 00 00 00   tcp.............
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 3a 33   yan-VirtualBox:3
33 30 39 33 00 00 00 00  ff ff ff ff 01 03 00 00   3093............
1e a0 de c0 00 00 00 01  00 00 04 c2 00 00 00 00   ................
00 00 ff ff 00 00 00 00  00 00 00 00 01 00 00 01   ................
01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 01 00 00 00   ................
00 00 00 00 00 e1 f5 05  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
50 00 00 00 4c 00 00 00  01 10 00 40 24 00 00 00   P...L......@$...
20 00 00 00 14 00 00 00  f1 af a9 15 45 f5 1d 78    ...........E..x
a2 0f c9 1a 41 f1 d8 00  71 02 00 00 00 00 00 00   ....A...q.......
00 00 00 00 02 10 00 40  18 00 00 00 14 00 00 00   .......@........
08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00                                     .....           
(22249|22252) DataReaderRemoteImpl::add_association - local 01030000.1ea0dec0.00000002.000003c7(ea08df15) remote 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22252) DataReaderImpl::add_association - bit 1 local 01030000.1ea0dec0.00000002.000003c7(ea08df15) remote 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22252) WriterInfo::WriterInfo: writer 01030000.1ea0dec0.00000001.000004c2(9283c78d) added to reader 01030000.1ea0dec0.00000002.000003c7(ea08df15).
(22249|22252) DataReaderImpl::add_association: inserted writer 01030000.1ea0dec0.00000001.000004c2(9283c78d).return 1
(22249|22252) DataReaderImpl::add_association: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) is associated with writer 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22252) TransportClient::associate added PendingAssoc between 01030000.1ea0dec0.00000002.000003c7(ea08df15) and remote 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22252) TcpTransport::accept_datalink local 01030000.1ea0dec0.00000002.000003c7(ea08df15) accepting connection from remote 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22252) TcpTransport::accept_datalink PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22252) TcpTransport::accept_datalink found datalink link[0x7fb6380061d0]
(22249|22252) TransportClient::use_datalink_i TransportClient(0x5633575ab420) using datalink[0x7fb6380061d0] from 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22252) TransportClient::use_datalink_i TransportClient(0x5633575ab420) about to add_link[0x7fb6380061d0] to remote: 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22251) EndHistoricSamplesMissedSweeper::ScheduleCommand::execute() - Scheduled sweeper 3
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, Becoming client leader.
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) enter reactor event loop
(22249|22252) DataLink::make_reservation() - creating association local subscription 01030000.1ea0dec0.00000002.000003c7(ea08df15) <--> with remote publication  01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22252) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==65052, base==3eb631f4
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 168 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 168 amount == 168.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052127732.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052127732.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052127900.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127732.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
07 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127760.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
06 00 01 00 10 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 01 00 00 04 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 03 c7  44 43 50 53 02 00 01 00   ........DCPS....
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127800.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127800 this->payload_->wr_ptr() == 1052127816.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127816.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DBG:  received REQUEST_ACK
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Let's try to do some more.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127816.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
08 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127844.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
0b 00 01 00 10 00 00 00  ff ff ff ff 00 00 00 00   ................
04 4b 80 61 90 3a e5 1d  01 03 00 00 1e a0 de c0   .K.a.:..........
00 00 00 01 00 00 04 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 03 c7  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127884.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127884 this->payload_->wr_ptr() == 1052127900.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127900.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052127900.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000004c2(9283c78d) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.501562000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000003c7(ea08df15) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.501562000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22256) Received END_HISTORIC_SAMPLES control message
(22249|22251) EndHistoricSamplesMissedSweeper::CancelCommand::execute() - Unscheduled sweeper 3
(22249|22256) Resumed sample processing for durable writer 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22252) DBG:   Send element msg() has total_length() == [56].
(22249|22252) DBG:   this->max_header_size_ == [28].
(22249|22252) DBG:   this->max_size_ == [2147481599].
(22249|22252) DBG:   this->mode_ == MODE_DIRECT.
(22249|22252) DBG:   The element DOES require an exclusive packet.
(22249|22252) DBG:   Start the 'append elem' to current packet logic.
(22249|22252) DBG:   Put element into current packet elems_.
(22249|22252) DBG:   Before, the header_.length_ == [0].
(22249|22252) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22252) DBG:   Now the current packet looks full - send it (directly).
(22249|22252) DBG:   Prepare the current packet for a direct send attempt.
(22249|22252) DBG:   Marshal the packet header.
(22249|22252) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22252) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22252) DBG:   Increment header sequence for next packet.
(22249|22252) DBG:   Set the header_complete_ flag to false.
(22249|22252) DBG:   Now attempt to send the packet.
(22249|22252) DBG:   Populate the iovec array using the packet.
(22249|22252) DBG:   There are [2] number of entries in the iovec array.
(22249|22252) DBG:   Attempt to send_bytes() now.
(22249|22252) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22252) DBG:   The sendv() returned [84].
(22249|22252) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22252) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22252) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22252) DBG:   Set num_bytes_left to 84.
(22249|22252) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22252) DBG:   Peek at the element at the front of the packet elems_.
(22249|22252) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22252) DBG:   Start with tail block == element->msg().
(22249|22252) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22252) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22252) DBG:   Now, num_bytes_left == [56].
(22249|22252) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22252) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22252) DBG:   Release the fully sent block.
(22249|22252) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22252) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22252) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22252) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22252) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22252) DBG:   Set the fully sent block's cont() to 0.
(22249|22252) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_bytes_left == [0].
(22249|22252) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22252) DBG:   So, the fully sent block was part of an element.
(22249|22252) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22252) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22252) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22252) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22252) DBG:   We can release the fully sent block now.
(22249|22252) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22252) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22252) DBG:   Peek at the next element in the packet elems_.
(22249|22252) DBG:   The 'num_bytes_left' loop has completed.
(22249|22252) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22252) DBG:   Before, header_.length_ == 56.
(22249|22252) DBG:   After, header_.length_ == 0.
(22249|22252) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22252) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   The outcome of the send_packet() was 0.
(22249|22252) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22252) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22252) DBG:   Back from the direct_send() attempt.
(22249|22252) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22249) - Transport[12]::handle_input
TAO (22249|22249) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22249) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22249) - Transport[12]::handle_input_parse_data, read 40 bytes
TAO (22249|22249) - GIOP_Message_State::parse_message_header_i
TAO (22249|22249) - GIOP_Message_State::get_version_info
TAO (22249|22249) - GIOP_Message_State::get_byte_order_info
TAO (22249|22249) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22249) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 28 data bytes, my endian, Type Reply[14]
GIOP message - HEXDUMP 40 bytes
47 49 4f 50 01 02 01 01  1c 00 00 00 0e 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 03 c7                            ........        
TAO (22249|22249) - TAO_Muxed_TMS::dispatch_reply, id = 14
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) exit reactor event loop
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (client) waking and yielding to allow event thread leadership
(22249|22249) SubscriberImpl::reader_enabled, datareader(topic_name=DCPSPublication) enabled
(22249|22249) DDS::SubscriptionBuiltinTopicDataDataReaderImpl::enable_specific-data Cached_Allocator_With_Overflow 574748f0 with 20 chunks
(22249|22249) DataReaderImpl::enable Cached_Allocator_With_Overflow 575ae450 with 20 chunks
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) TcpTransport public address string <yan-VirtualBox:37801>
(22249|22249) DataReaderImpl::setup_deserialization: Setup successfully with the following data representations: Unaligned CDR
TAO (22249|22249) - TAO_System_Id_With_Unique_Id_Strategy::bind_using_system_id: type=IDL:OpenDDS/DCPS/DataReaderRemote:1.0, id=0x040000
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x575b2580
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <16>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 588 data bytes, my endian, Type Request[16]
GIOP message - HEXDUMP 600 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 10 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 06 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 03 00 00 00 01  00 00 00 04 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   ................
00 00 00 00 50 00 00 00  4c 00 00 00 01 10 00 40   ....P...L......@
24 00 00 00 20 00 00 00  14 00 00 00 f1 95 fc f0   $... ...........
5c d2 67 e1 70 e3 4a 49  f1 e1 e7 00 31 02 00 00   \.g.p.JI....1...
00 00 00 00 00 00 00 00  02 10 00 40 18 00 00 00   ...........@....
14 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 2 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/2 has 509 bytes
TAO - Transport[12]::drain_queue_helper (0/509) - HEXDUMP 509 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 10 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 05 00 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 06 c5 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ....&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 03 00 00 00 01  00 00 00 04 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 33 37 38 30 31  00 00 00 00 00 00 00 00   ox:37801........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 1/2 has 91 bytes
TAO - Transport[12]::drain_queue_helper (0/91) - HEXDUMP 91 bytes
00 00 00 00 00 00 00 50  00 00 00 4c 00 00 00 01   .......P...L....
10 00 40 24 00 00 00 20  00 00 00 14 00 00 00 f1   ..@$... ........
95 fc f0 5c d2 67 e1 70  e3 4a 49 f1 e1 e7 00 31   ...\.g.p.JI....1
02 00 00 00 00 00 00 00  00 00 00 02 10 00 40 18   ..............@.
00 00 00 14 00 00 00 08  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00                  ...........     
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 600
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 600, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, Becoming client leader.
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) enter reactor event loop
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22249) - Transport[12]::handle_input
TAO (22249|22249) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22249) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22249) - Transport[12]::handle_input_parse_data, read 405 bytes
TAO (22249|22249) - GIOP_Message_State::parse_message_header_i
TAO (22249|22249) - GIOP_Message_State::get_version_info
TAO (22249|22249) - GIOP_Message_State::get_byte_order_info
TAO (22249|22249) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22249) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 393 data bytes, my endian, Type Request[7]
GIOP message - HEXDUMP 405 bytes
47 49 4f 50 01 02 01 00  89 01 00 00 07 00 00 00   GIOP............
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 03 00 00 00 01  00 00 00 04 00 00 00 52   ...............R
10 00 00 00 61 64 64 5f  61 73 73 6f 63 69 61 74   ....add_associat
69 6f 6e 00 00 00 00 00  01 03 00 00 1e a0 de c0   ion.............
00 00 00 02 00 00 04 c7  01 00 00 00 04 00 00 00   ................
74 63 70 00 1d 00 00 00  01 00 00 00 15 00 00 00   tcp.............
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 3a 33   yan-VirtualBox:3
33 30 39 33 00 00 00 00  ff ff ff ff 01 03 00 00   3093............
1e a0 de c0 00 00 00 01  00 00 03 c2 00 00 00 00   ................
00 00 ff ff 00 00 00 00  00 00 00 00 01 00 00 01   ................
01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 01 00 00 00   ................
00 00 00 00 00 e1 f5 05  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
50 00 00 00 4c 00 00 00  01 10 00 40 24 00 00 00   P...L......@$...
20 00 00 00 14 00 00 00  f1 95 fc f0 5c d2 67 e1    ...........\.g.
70 e3 4a 49 f1 e1 e7 00  31 02 00 00 00 00 00 00   p.JI....1.......
00 00 00 00 02 10 00 40  18 00 00 00 14 00 00 00   .......@........
08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00                                     .....           
(22249|22249) DataReaderRemoteImpl::add_association - local 01030000.1ea0dec0.00000002.000004c7(a54949d2) remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22249) DataReaderImpl::add_association - bit 1 local 01030000.1ea0dec0.00000002.000004c7(a54949d2) remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22249) WriterInfo::WriterInfo: writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a) added to reader 01030000.1ea0dec0.00000002.000004c7(a54949d2).
(22249|22249) DataReaderImpl::add_association: inserted writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a).return 1
(22249|22249) DataReaderImpl::add_association: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) is associated with writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22249) TransportClient::associate added PendingAssoc between 01030000.1ea0dec0.00000002.000004c7(a54949d2) and remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22249) TcpTransport::accept_datalink local 01030000.1ea0dec0.00000002.000004c7(a54949d2) accepting connection from remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22249) TcpTransport::accept_datalink PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22249) TcpTransport::accept_datalink found datalink link[0x7fb6380061d0]
(22249|22249) TransportClient::use_datalink_i TransportClient(0x5633575afcb0) using datalink[0x7fb6380061d0] from 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22249) TransportClient::use_datalink_i TransportClient(0x5633575afcb0) about to add_link[0x7fb6380061d0] to remote: 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22251) EndHistoricSamplesMissedSweeper::ScheduleCommand::execute() - Scheduled sweeper 4
(22249|22249) DataLink::make_reservation() - creating association local subscription 01030000.1ea0dec0.00000002.000004c7(a54949d2) <--> with remote publication  01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22249) DBG:   Send element msg() has total_length() == [56].
(22249|22249) DBG:   this->max_header_size_ == [28].
(22249|22249) DBG:   this->max_size_ == [2147481599].
(22249|22249) DBG:   this->mode_ == MODE_DIRECT.
(22249|22249) DBG:   The element DOES require an exclusive packet.
(22249|22249) DBG:   Start the 'append elem' to current packet logic.
(22249|22249) DBG:   Put element into current packet elems_.
(22249|22249) DBG:   Before, the header_.length_ == [0].
(22249|22249) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22249) DBG:   Now the current packet looks full - send it (directly).
(22249|22249) DBG:   Prepare the current packet for a direct send attempt.
(22249|22249) DBG:   Marshal the packet header.
(22249|22249) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22249) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22249) DBG:   Increment header sequence for next packet.
(22249|22249) DBG:   Set the header_complete_ flag to false.
(22249|22249) DBG:   Now attempt to send the packet.
(22249|22249) DBG:   Populate the iovec array using the packet.
(22249|22249) DBG:   There are [2] number of entries in the iovec array.
(22249|22249) DBG:   Attempt to send_bytes() now.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64884, base==3eb6329c
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 168 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 168 amount == 168.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052127900.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052127900.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128068.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127900.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
09 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127928.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
06 00 01 00 10 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 01 00 00 03 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 04 c7  44 43 50 53 02 00 01 00   ........DCPS....
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127968.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127968 this->payload_->wr_ptr() == 1052127984.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127984.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DBG:  received REQUEST_ACK
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Let's try to do some more.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052127984.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
0a 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128012.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
0b 00 01 00 10 00 00 00  ff ff ff ff 00 00 00 00   ................
04 4b 80 61 60 1b 2a 1e  01 03 00 00 1e a0 de c0   .K.a`.*.........
00 00 00 01 00 00 03 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 04 c7  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128052.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128052 this->payload_->wr_ptr() == 1052128068.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128068.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128068.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000003c2(ddc2514a) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.506076000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000004c7(a54949d2) received sample: END_HISTORIC_SAMPLES (0x0b), Length: 16, Byte order: Little Endian, Sequence: 0x00, Timestamp: 1635797764.506076000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22256) Received END_HISTORIC_SAMPLES control message
(22249|22251) EndHistoricSamplesMissedSweeper::CancelCommand::execute() - Unscheduled sweeper 4
(22249|22249) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22249) DBG:   The sendv() returned [84].
(22249|22249) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22249) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22249) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22249) DBG:   Set num_bytes_left to 84.
(22249|22249) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22249) DBG:   Peek at the element at the front of the packet elems_.
(22249|22249) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22249) DBG:   Start with tail block == element->msg().
(22249|22249) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22249) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22249) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22249) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22249) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22249) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22249) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22249) DBG:   Set the fully sent block's cont() to 0.
(22249|22249) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22249) DBG:   Now, num_bytes_left == [56].
(22249|22249) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22249) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22249) DBG:   Release the fully sent block.
(22249|22249) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22249) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22249) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22249) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22249) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22249) DBG:   Set the fully sent block's cont() to 0.
(22249|22249) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22249) DBG:   Now, num_bytes_left == [0].
(22249|22249) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22249) DBG:   So, the fully sent block was part of an element.
(22249|22249) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22249) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22249) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22249) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22249) DBG:   We can release the fully sent block now.
(22249|22249) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22249) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22249) DBG:   Peek at the next element in the packet elems_.
(22249|22249) DBG:   The 'num_bytes_left' loop has completed.
(22249|22249) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22249) DBG:   Before, header_.length_ == 56.
(22249|22249) DBG:   After, header_.length_ == 0.
(22249|22249) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22249) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22249) DBG:   The outcome of the send_packet() was 0.
(22249|22249) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22249) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22249) DBG:   Back from the direct_send() attempt.
(22249|22249) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22249) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22256) Resumed sample processing for durable writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22249) DBG:   Send element msg() has total_length() == [56].
(22249|22249) DBG:   this->max_header_size_ == [28].
(22249|22249) DBG:   this->max_size_ == [2147481599].
(22249|22249) DBG:   this->mode_ == MODE_DIRECT.
(22249|22249) DBG:   The element DOES require an exclusive packet.
(22249|22249) DBG:   Start the 'append elem' to current packet logic.
(22249|22249) DBG:   Put element into current packet elems_.
(22249|22249) DBG:   Before, the header_.length_ == [0].
(22249|22249) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22249) DBG:   Now the current packet looks full - send it (directly).
(22249|22249) DBG:   Prepare the current packet for a direct send attempt.
(22249|22249) DBG:   Marshal the packet header.
(22249|22249) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22249) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22249) DBG:   Increment header sequence for next packet.
(22249|22249) DBG:   Set the header_complete_ flag to false.
(22249|22249) DBG:   Now attempt to send the packet.
(22249|22249) DBG:   Populate the iovec array using the packet.
(22249|22249) DBG:   There are [2] number of entries in the iovec array.
(22249|22249) DBG:   Attempt to send_bytes() now.
(22249|22249) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22249) DBG:   The sendv() returned [84].
(22249|22249) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22249) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22249) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22249) DBG:   Set num_bytes_left to 84.
(22249|22249) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22249) DBG:   Peek at the element at the front of the packet elems_.
(22249|22249) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22249) DBG:   Start with tail block == element->msg().
(22249|22249) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22249) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22249) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22249) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22249) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22249) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22249) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22249) DBG:   Set the fully sent block's cont() to 0.
(22249|22249) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22249) DBG:   Now, num_bytes_left == [56].
(22249|22249) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22249) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22249) DBG:   Release the fully sent block.
(22249|22249) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22249) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22249) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22249) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22249) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22249) DBG:   Set the fully sent block's cont() to 0.
(22249|22249) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22249) DBG:   Now, num_bytes_left == [0].
(22249|22249) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22249) DBG:   So, the fully sent block was part of an element.
(22249|22249) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22249) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22249) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22249) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22249) DBG:   We can release the fully sent block now.
(22249|22249) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22249) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22249) DBG:   Peek at the next element in the packet elems_.
(22249|22249) DBG:   The 'num_bytes_left' loop has completed.
(22249|22249) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22249) DBG:   Before, header_.length_ == 56.
(22249|22249) DBG:   After, header_.length_ == 0.
(22249|22249) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22249) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22249) DBG:   The outcome of the send_packet() was 0.
(22249|22249) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22249) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22249) DBG:   Back from the direct_send() attempt.
(22249|22249) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
TAO (22249|22249) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (leader) exit reactor event loop
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 40 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 28 data bytes, my endian, Type Reply[16]
GIOP message - HEXDUMP 40 bytes
47 49 4f 50 01 02 01 01  1c 00 00 00 10 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 04 c7                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 16
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) SubscriberImpl::reader_enabled, datareader(topic_name=DCPSSubscription) enabled
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <18>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 285 data bytes, my endian, Type Request[18]
GIOP message - HEXDUMP 297 bytes
47 49 4f 50 01 02 01 00  1d 01 00 00 12 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 69 6f 6e 00 00 00 00  2a 00 00 00 01 03 00 00   .ion....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 16 00 00 00   ................
4d 6f 76 69 65 20 44 69  73 63 75 73 73 69 6f 6e   Movie Discussion
20 4c 69 73 74 00 00 00  13 00 00 00 4d 65 73 73    List.......Mess
65 6e 67 65 72 3a 3a 4d  65 73 73 61 67 65 00 61   enger::Message.a
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01                        .........       
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 297 bytes
TAO - Transport[12]::drain_queue_helper (0/297) - HEXDUMP 297 bytes
47 49 4f 50 01 02 01 00  1d 01 00 00 12 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 61 73 73 65  72 74 5f 74 6f 70 69 63   ....assert_topic
00 69 6f 6e 00 00 00 00  2a 00 00 00 01 03 00 00   .ion....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 16 00 00 00   ................
4d 6f 76 69 65 20 44 69  73 63 75 73 73 69 6f 6e   Movie Discussion
20 4c 69 73 74 00 00 00  13 00 00 00 4d 65 73 73    List.......Mess
65 6e 67 65 72 3a 3a 4d  65 73 73 61 67 65 00 61   enger::Message.a
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 01 00 00 00  ff ff ff ff ff ff ff ff   ................
ff ff ff ff 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01                        .........       
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 297
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 297, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64716, base==3eb63344
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128068.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128068.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128152.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128068.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128152.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
0b 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128096.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128152.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
02 00 01 02 10 00 00 00  00 00 00 00 01 00 00 00   ................
04 4b 80 61 30 2d 52 1e  01 03 00 00 1e a0 de c0   .K.a0-R.........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 08 45  00 00 00 00 00 00 00 00   .......E........
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128136.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128152.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128136 this->payload_->wr_ptr() == 1052128152.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128152.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128152.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.508702000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.508702000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) DataReaderImpl::writer_became_alive: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) from writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) previous state NOT_SET.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1000.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000002c7(f313ee54), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000002c2(c4d9600b)] == ALIVE
(22249|22251) DataReaderImpl::handle_timeout: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) has 0 live writers; from_reactor=0
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) instance 4 is_new_instance 1 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64632, base==3eb63398
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 253 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 253 amount == 253.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128152.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128152.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128405.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128152.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128405.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  e1 00 00 00 00 00 00 00   DCPS............
0c 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 225.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128180.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128405.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 01 00 b9 00 00 00  00 00 00 00 02 00 00 00   ................
04 4b 80 61 60 dd 5d 1e  01 03 00 00 1e a0 de c0   .K.a`.].........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 08 45  16 00 00 00 4d 6f 76 69   .......E....Movi
(22249|22256) DBG:   The demarshalled sample header says that we have 185 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 185.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128220.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128405.
(22249|22256) DBG:   amount of data for the next block in the chain is 185
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128220 this->payload_->wr_ptr() == 1052128405.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128405.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128405.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: SAMPLE_DATA (0x00), Length: 185, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.509468000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: SAMPLE_DATA (0x00), Length: 185, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.509468000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) instance 4 is_new_instance 0 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 44 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 32 data bytes, my endian, Type Reply[18]
GIOP message - HEXDUMP 44 bytes
47 49 4f 50 01 02 01 01  20 00 00 00 12 00 00 00   GIOP.... .......
00 00 00 00 00 00 00 00  00 00 00 00 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 08 45               ...........E    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 18
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Messenger::MessageDataReaderImpl::enable_specific-data Cached_Allocator_With_Overflow 575b59d0 with 20 chunks
(22249|22249) DataReaderImpl::enable Cached_Allocator_With_Overflow 575b5a50 with 20 chunks
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) TcpTransport::configure_i listening on 0.0.0.0:44299
(22249|22249) TransportImpl::open()
   transport_type:               tcp
   name:                         _OPENDDS_0500_TCP
   queue_messages_per_pool:      10
   queue_initial_pools:          5
   max_packet_size:              2147481599
   max_samples_per_packet:       10
   optimum_packet_size:          4096
   thread_per_connection:        false
   datalink_release_delay:       10000
   datalink_control_chunks:      32

   local_address:                yan-VirtualBox:44299
   pub_address:                  
   enable_nagle_algorithm:       false
   conn_retry_initial_delay:     500
   conn_retry_backoff_multiplier:2
   conn_retry_attempts:          3
   passive_reconnect_duration:   2000
   max_output_pause_period:      -1
   active_conn_timeout_period:   5000
(22249|22249) TcpTransport public address string <yan-VirtualBox:44299>
(22249|22249) DataReaderImpl::setup_deserialization: Setup successfully with the following data representations: Unaligned CDR
TAO (22249|22249) - TAO_System_Id_With_Unique_Id_Strategy::bind_using_system_id: type=IDL:OpenDDS/DCPS/DataReaderRemote:1.0, id=0x050000
TAO (22249|22249) - Stub::base_profiles, acquired profile lock this = 0x575aee30
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <20>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 588 data bytes, my endian, Type Request[20]
GIOP message - HEXDUMP 600 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 14 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 01 03 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 08 45 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ...E&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 04 00 00 00 01  00 00 00 05 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 34 34 32 39 39  00 00 00 00 00 00 00 00   ox:44299........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   ................
00 00 00 00 50 00 00 00  4c 00 00 00 01 10 00 40   ....P...L......@
24 00 00 00 20 00 00 00  14 00 00 00 f1 5d fb 66   $... ........].f
10 1b e0 f1 18 31 74 a2  ca 0e c5 00 54 00 00 00   .....1t.....T...
00 00 00 00 00 00 00 00  02 10 00 40 18 00 00 00   ...........@....
14 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 2 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/2 has 509 bytes
TAO - Transport[12]::drain_queue_helper (0/509) - HEXDUMP 509 bytes
47 49 4f 50 01 02 01 00  4c 02 00 00 14 00 00 00   GIOP....L.......
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
11 00 00 00 61 64 64 5f  73 75 62 73 63 72 69 70   ....add_subscrip
74 69 6f 6e 00 00 00 00  00 00 00 00 01 03 00 00   tion............
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 08 45 26 00 00 00  49 44 4c 3a 4f 70 65 6e   ...E&...IDL:Open
44 44 53 2f 44 43 50 53  2f 44 61 74 61 52 65 61   DDS/DCPS/DataRea
64 65 72 52 65 6d 6f 74  65 3a 31 2e 30 00 00 00   derRemote:1.0...
01 00 00 00 00 00 00 00  78 00 00 00 01 01 02 00   ........x.......
0f 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 00 00 21 8b 00 00  23 00 00 00 14 01 0f 00   ox..!...#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 04 00 00 00 01  00 00 00 05 00 00 00 00   ................
02 00 00 00 00 00 00 00  08 00 00 00 01 00 00 00   ................
00 4f 41 54 01 00 00 00  18 00 00 00 01 00 00 00   .OAT............
01 00 01 00 01 00 00 00  01 00 01 05 09 01 01 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  00 00 00 00 ff ff ff 7f   ................
ff ff ff 7f 01 00 00 00  ff ff ff 7f ff ff ff 7f   ................
00 00 00 00 00 00 00 00  01 00 00 00 ff ff ff ff   ................
ff ff ff ff ff ff ff ff  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  ff ff ff 7f ff ff ff 7f   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 01 00 00 00   ................
04 00 00 00 74 63 70 00  1d 00 00 00 01 00 00 00   ....tcp.........
15 00 00 00 79 61 6e 2d  56 69 72 74 75 61 6c 42   ....yan-VirtualB
6f 78 3a 34 34 32 39 39  00 00 00 00 00 00 00 00   ox:44299........
00 00 00 00 00 00 00 00  00 00 00 00 01 00 00 00   ................
01 00 00 00 00 00 00 00  01 00 00 00 00            .............   
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 1/2 has 91 bytes
TAO - Transport[12]::drain_queue_helper (0/91) - HEXDUMP 91 bytes
00 00 00 00 00 00 00 50  00 00 00 4c 00 00 00 01   .......P...L....
10 00 40 24 00 00 00 20  00 00 00 14 00 00 00 f1   ..@$... ........
5d fb 66 10 1b e0 f1 18  31 74 a2 ca 0e c5 00 54   ].f.....1t.....T
00 00 00 00 00 00 00 00  00 00 00 02 10 00 40 18   ..............@.
00 00 00 14 00 00 00 08  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00                  ...........     
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 600
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 600, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64379, base==3eb63495
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128405.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128405.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128489.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128405.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128489.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
0d 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128433.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128489.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
02 00 01 02 10 00 00 00  00 00 00 00 01 00 00 00   ................
04 4b 80 61 e0 29 af 1e  01 03 00 00 1e a0 de c0   .K.a.)..........
00 00 00 01 00 00 03 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 05 07  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128473.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128489.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128473 this->payload_->wr_ptr() == 1052128489.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128489.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128489.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000003c2(ddc2514a) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.514796000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000004c7(a54949d2) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.514796000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22256) DataReaderImpl::writer_became_alive: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) from writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a) previous state NOT_SET.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1000.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000004c7(a54949d2), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000003c2(ddc2514a)] == ALIVE
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a) instance 6 is_new_instance 1 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22251) DataReaderImpl::handle_timeout: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) has 0 live writers; from_reactor=0
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64295, base==3eb634e9
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 235 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 235 amount == 235.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128489.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128489.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128724.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128489.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128724.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  cf 00 00 00 00 00 00 00   DCPS............
0e 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 207.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128517.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128724.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 01 00 a7 00 00 00  00 00 00 00 02 00 00 00   ................
04 4b 80 61 c8 62 bb 1e  01 03 00 00 1e a0 de c0   .K.a.b..........
00 00 00 01 00 00 03 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 05 07  01 03 00 00 1e a0 de c0   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 167 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 167.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128557.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128724.
(22249|22256) DBG:   amount of data for the next block in the chain is 167
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128557 this->payload_->wr_ptr() == 1052128724.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128724.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128724.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000003c2(ddc2514a) received sample: SAMPLE_DATA (0x00), Length: 167, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.515597000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000004c7(a54949d2) received sample: SAMPLE_DATA (0x00), Length: 167, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.515597000, Publication: 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a) instance 6 is_new_instance 0 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 40 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 28 data bytes, my endian, Type Reply[20]
GIOP message - HEXDUMP 40 bytes
47 49 4f 50 01 02 01 01  1c 00 00 00 14 00 00 00   GIOP............
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 05 07                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 20
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) SubscriberImpl::reader_enabled, datareader(topic_name=Movie Discussion List) enabled
(22249|22249) ConditionImpl::signal_all()
(22249|22249) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x0.
(22249|22249) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x0.
(22249|22249) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x0.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==64060, base==3eb635d4
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128724.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128724.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052128808.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128724.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128808.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
0f 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128752.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128808.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
02 00 01 02 10 00 00 00  00 00 00 00 03 00 00 00   ................
04 4b 80 61 a0 29 0c 20  01 03 00 00 1e a0 de c0   .K.a.). ........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 08 45  00 00 00 00 00 00 00 00   .......E........
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128792.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128808.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128792 this->payload_->wr_ptr() == 1052128808.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128808.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052128808.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.537668000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.537668000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) instance 7 is_new_instance 1 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63976, base==3eb63628
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 253 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 253 amount == 253.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052128808.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052128808.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129061.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128808.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129061.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  e1 00 00 00 00 00 00 00   DCPS............
10 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 225.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128836.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129061.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 01 00 b9 00 00 00  00 00 00 00 04 00 00 00   ................
04 4b 80 61 50 0c 1a 20  01 03 00 00 1e a0 de c0   .K.aP.. ........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 08 45  16 00 00 00 4d 6f 76 69   .......E....Movi
(22249|22256) DBG:   The demarshalled sample header says that we have 185 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 185.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052128876.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129061.
(22249|22256) DBG:   amount of data for the next block in the chain is 185
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052128876 this->payload_->wr_ptr() == 1052129061.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129061.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129061.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: SAMPLE_DATA (0x00), Length: 185, Byte order: Little Endian, Sequence: 0x04, Timestamp: 1635797764.538578000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: SAMPLE_DATA (0x00), Length: 185, Byte order: Little Endian, Sequence: 0x04, Timestamp: 1635797764.538578000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b) instance 7 is_new_instance 0 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63723, base==3eb63725
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129061.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129061.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129145.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129061.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129145.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
11 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129089.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129145.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
02 00 01 02 10 00 00 00  00 00 00 00 01 00 00 00   ................
04 4b 80 61 e8 af 47 20  01 03 00 00 1e a0 de c0   .K.a..G ........
00 00 00 01 00 00 04 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 02  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129129.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129145.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129129 this->payload_->wr_ptr() == 1052129145.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129145.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129145.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000004c2(9283c78d) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.541569000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000003c7(ea08df15) received sample: INSTANCE_REGISTRATION (0x02), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.541569000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22256) DataReaderImpl::writer_became_alive: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) from writer 01030000.1ea0dec0.00000001.000004c2(9283c78d) previous state NOT_SET.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1000.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000003c7(ea08df15), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000004c2(9283c78d)] == ALIVE
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) writer 01030000.1ea0dec0.00000001.000004c2(9283c78d) instance 8 is_new_instance 1 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22251) DataReaderImpl::handle_timeout: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) has 0 live writers; from_reactor=0
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63639, base==3eb63779
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 267 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 267 amount == 267.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129145.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129145.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129412.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129145.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129412.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  ef 00 00 00 00 00 00 00   DCPS............
12 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 239.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129173.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129412.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
00 00 01 00 c7 00 00 00  00 00 00 00 02 00 00 00   ................
04 4b 80 61 88 d0 59 20  01 03 00 00 1e a0 de c0   .K.a..Y ........
00 00 00 01 00 00 04 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 02  01 03 00 00 1e a0 de c0   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 199 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 199.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129213.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129412.
(22249|22256) DBG:   amount of data for the next block in the chain is 199
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129213 this->payload_->wr_ptr() == 1052129412.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129412.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129412.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000004c2(9283c78d) received sample: SAMPLE_DATA (0x00), Length: 199, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.542757000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000003c7(ea08df15) received sample: SAMPLE_DATA (0x00), Length: 199, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.542757000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) writer 01030000.1ea0dec0.00000001.000004c2(9283c78d) instance 8 is_new_instance 0 filtered 0
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22258) DBG:   TcpConnection::passive_open.
(22249|22258) DBG:   TcpConnection::open passive handle=22.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 405 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 393 data bytes, my endian, Type Request[9]
GIOP message - HEXDUMP 405 bytes
47 49 4f 50 01 02 01 00  89 01 00 00 09 00 00 00   GIOP............
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 04 00 00 00 01  00 00 00 05 00 00 00 52   ...............R
10 00 00 00 61 64 64 5f  61 73 73 6f 63 69 61 74   ....add_associat
69 6f 6e 00 00 00 00 00  01 03 00 00 1e a0 de c0   ion.............
00 00 00 02 00 00 05 07  01 00 00 00 04 00 00 00   ................
74 63 70 00 1d 00 00 00  01 00 00 00 15 00 00 00   tcp.............
79 61 6e 2d 56 69 72 74  75 61 6c 42 6f 78 3a 34   yan-VirtualBox:4
36 30 33 35 00 00 00 00  ff ff ff ff 01 03 00 00   6035............
1e a0 de c0 00 00 00 03  00 00 01 02 00 00 00 00   ................
00 00 ff ff 00 00 00 00  00 00 00 00 01 00 00 01   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
ff ff ff 7f ff ff ff 7f  00 00 00 00 00 00 00 00   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 01 00 00 00   ................
00 00 00 00 00 e1 f5 05  00 00 00 00 00 00 00 00   ................
01 00 00 00 ff ff ff ff  ff ff ff ff ff ff ff ff   ................
00 00 00 00 ff ff ff 7f  ff ff ff 7f 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   ................
50 00 00 00 4c 00 00 00  01 10 00 40 24 00 00 00   P...L......@$...
20 00 00 00 14 00 00 00  f1 5d fb 66 10 1b e0 f1    ........].f....
18 31 74 a2 ca 0e c5 00  54 00 00 00 00 00 00 00   .1t.....T.......
00 00 00 00 02 10 00 40  18 00 00 00 14 00 00 00   .......@........
08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00                                     .....           
(22249|22252) DataReaderRemoteImpl::add_association - local 01030000.1ea0dec0.00000002.00000507(2736ba23) remote 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22252) DataReaderImpl::add_association - bit 0 local 01030000.1ea0dec0.00000002.00000507(2736ba23) remote 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22252) WriterInfo::WriterInfo: writer 01030000.1ea0dec0.00000003.00000102(0e50a218) added to reader 01030000.1ea0dec0.00000002.00000507(2736ba23).
(22249|22252) DataReaderImpl::add_association: inserted writer 01030000.1ea0dec0.00000003.00000102(0e50a218).return 1
(22249|22252) DataReaderImpl::add_association: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) is associated with writer 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22252) TransportClient::associate added PendingAssoc between 01030000.1ea0dec0.00000002.00000507(2736ba23) and remote 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22252) TcpTransport::accept_datalink local 01030000.1ea0dec0.00000002.00000507(2736ba23) accepting connection from remote 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22252) TcpTransport::accept_datalink PriorityKey prio=0, addr=127.0.1.1:46035, is_loopback=0, is_active=0
(22249|22252) TcpTransport::accept_datalink create new link[0x7fb638021c40]
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
(22249|22258) DBG:   TcpConnection::handle_setup_input 0x7fb628002d10 recv returned 4 Success.
(22249|22258) DBG:   TcpConnection::handle_setup_input 0x7fb628002d10 recv returned 21 Success.
(22249|22258) DBG:   TcpConnection::handle_setup_input 0x7fb628002d10 recv returned 4 Success.
(22249|22258) DBG:   TcpConnection::handle_setup_input 0x7fb628002d10 127.0.1.1:46035->127.0.1.1:44299, priority==0, reconnect_state = INIT_STATE
(22249|22258) NetworkAddress addr: yan-VirtualBox:46035 reserved: 0
(22249|22258) TcpTransport::passive_connection() - established with yan-VirtualBox:46035.
(22249|22258) TcpTransport::connect_tcp_datalink() [1] - creating send strategy with priority 0.
(22249|22258) DirectPriorityMapper:thread_priority() - mapped TRANSPORT_PRIORITY value 0 to thread priority 0.
(22249|22258) ReactorSynch::ReactorSynch() [0] - establishing synch without a worker.
(22249|22258) TransportReceiveStrategy-mb Cached_Allocator_With_Overflow 28005c78 with 1000 chunks
(22249|22258) TransportReceiveStrategy-db Cached_Allocator_With_Overflow 28005d18 with 100 chunks
(22249|22258) TransportReceiveStrategy-data Cached_Allocator_With_Overflow 28005db8 with 100 chunks
(22249|22258) TcpReceiveStrategy::start_i() - link:
   There are 0 local entities currently using this link
 connected to yan-VirtualBox:46035 registering with reactor to receive.
(22249|22258) TransportClient::use_datalink_i TransportClient(0x5633575b4f90) using datalink[0x7fb638021c40] from 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) TransportClient::use_datalink_i TransportClient(0x5633575b4f90) about to add_link[0x7fb638021c40] to remote: 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) DataLink::make_reservation() - creating association local subscription 01030000.1ea0dec0.00000002.00000507(2736ba23) <--> with remote publication  01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DBG:   Send element msg() has total_length() == [56].
(22249|22258) DBG:   this->max_header_size_ == [28].
(22249|22258) DBG:   this->max_size_ == [2147481599].
(22249|22258) DBG:   this->mode_ == MODE_DIRECT.
(22249|22258) DBG:   The element DOES require an exclusive packet.
(22249|22258) DBG:   Start the 'append elem' to current packet logic.
(22249|22258) DBG:   Put element into current packet elems_.
(22249|22258) DBG:   Before, the header_.length_ == [0].
(22249|22258) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22258) DBG:   Now the current packet looks full - send it (directly).
(22249|22258) DBG:   Prepare the current packet for a direct send attempt.
(22249|22258) DBG:   Marshal the packet header.
(22249|22258) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22258) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22258) DBG:   Increment header sequence for next packet.
(22249|22258) DBG:   Set the header_complete_ flag to false.
(22249|22258) DBG:   Now attempt to send the packet.
(22249|22258) DBG:   Populate the iovec array using the packet.
(22249|22258) DBG:   There are [2] number of entries in the iovec array.
(22249|22258) DBG:   Attempt to send_bytes() now.
(22249|22258) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22258) DBG:   The sendv() returned [84].
(22249|22258) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22258) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22258) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22258) DBG:   Set num_bytes_left to 84.
(22249|22258) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22258) DBG:   Peek at the element at the front of the packet elems_.
(22249|22258) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22258) DBG:   Start with tail block == element->msg().
(22249|22258) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22258) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22258) DBG:   Now, num_bytes_left == [56].
(22249|22258) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22258) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22258) DBG:   Release the fully sent block.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22258) DBG:   Now, num_bytes_left == [0].
(22249|22258) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22258) DBG:   So, the fully sent block was part of an element.
(22249|22258) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22258) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22258) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22258) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22258) DBG:   We can release the fully sent block now.
(22249|22258) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22258) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22258) DBG:   Peek at the next element in the packet elems_.
(22249|22258) DBG:   The 'num_bytes_left' loop has completed.
(22249|22258) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22258) DBG:   Before, header_.length_ == 56.
(22249|22258) DBG:   After, header_.length_ == 0.
(22249|22258) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22258) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   The outcome of the send_packet() was 0.
(22249|22258) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22258) DBG:   Back from the direct_send() attempt.
(22249|22258) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22258) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) DataReaderImpl::transport_assoc_done: id_to_handle_map_[ 01030000.1ea0dec0.00000003.00000102(0e50a218)] = 0x8.
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x4000.
(22249|22258) ConditionImpl::signal_all() - number of sets: 1, locally: 1.
(22249|22249) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x0.
(22249|22258) DBG:   Send element msg() has total_length() == [56].
(22249|22258) DBG:   this->max_header_size_ == [28].
(22249|22258) DBG:   this->max_size_ == [2147481599].
(22249|22258) DBG:   this->mode_ == MODE_DIRECT.
(22249|22258) DBG:   The element DOES require an exclusive packet.
(22249|22258) DBG:   Start the 'append elem' to current packet logic.
(22249|22258) DBG:   Put element into current packet elems_.
(22249|22258) DBG:   Before, the header_.length_ == [0].
(22249|22258) DBG:   After adding element's length, the header_.length_ == [56].
(22249|22258) DBG:   Now the current packet looks full - send it (directly).
(22249|22258) DBG:   Prepare the current packet for a direct send attempt.
(22249|22258) DBG:   Marshal the packet header.
(22249|22258) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22258) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22258) DBG:   Increment header sequence for next packet.
(22249|22258) DBG:   Set the header_complete_ flag to false.
(22249|22258) DBG:   Now attempt to send the packet.
(22249|22258) DBG:   Populate the iovec array using the packet.
(22249|22258) DBG:   There are [2] number of entries in the iovec array.
(22249|22258) DBG:   Attempt to send_bytes() now.
(22249|22258) TcpSendStrategy::send_bytes_i sent 84 bytes
(22249|22258) DBG:   The sendv() returned [84].
(22249|22258) DBG:   The send_bytes() said that num_bytes_sent == [84].
(22249|22258) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22258) DBG:   Adjusting the current packet because 84 bytes of the packet have been sent.
(22249|22258) DBG:   Set num_bytes_left to 84.
(22249|22258) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22258) DBG:   Peek at the element at the front of the packet elems_.
(22249|22258) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22258) DBG:   Start with tail block == element->msg().
(22249|22258) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22258) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [84].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22258) DBG:   Now, num_bytes_left == [56].
(22249|22258) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22258) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22258) DBG:   Release the fully sent block.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [56].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [56].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [56]).
(22249|22258) DBG:   Now, num_bytes_left == [0].
(22249|22258) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22258) DBG:   So, the fully sent block was part of an element.
(22249|22258) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [56]).
(22249|22258) DBG:   Now, num_non_header_bytes_sent == [56].
(22249|22258) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22258) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22258) DBG:   We can release the fully sent block now.
(22249|22258) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22258) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22258) DBG:   Peek at the next element in the packet elems_.
(22249|22258) DBG:   The 'num_bytes_left' loop has completed.
(22249|22258) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22258) DBG:   Before, header_.length_ == 56.
(22249|22258) DBG:   After, header_.length_ == 0.
(22249|22258) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22258) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   The outcome of the send_packet() was 0.
(22249|22258) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22258) DBG:   Back from the direct_send() attempt.
(22249|22258) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[0].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[1].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[2].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[3].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[4].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[5].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[6].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[7].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[8].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[9].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[10].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[11].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[12].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[13].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[14].
(22249|22258) DBG:   Allocate a Message_Block for new receive_buffer_[15].
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==65536, base==3d520010
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22258) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:    -> At top of for..loop block.
(22249|22258) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22258) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1028784144.
(22249|22258) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1028784144.
(22249|22258) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1028784228.
(22249|22258) DBG:       Now, bytes == 0 .
(22249|22258) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:   Start processing the data we just received.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784144.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028784228.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
02 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784172.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028784228.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
06 00 01 00 10 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 02  01 03 00 00 1e a0 de c0   ................
00 00 00 02 00 00 05 07  00 00 00 00 00 00 00 00   ................
(22249|22258) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 16.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784212.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028784228.
(22249|22258) DBG:   amount of data for the next block in the chain is 16
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784212 this->payload_->wr_ptr() == 1028784228.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784228.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028784228.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DBG:  received REQUEST_ACK
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   We are done - no more data.
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==65452, base==3d520064
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 1958 - we call this the bytes_remaining.
(22249|22258) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:    -> At top of for..loop block.
(22249|22258) DBG:       index == 0 bytes == 1958 amount == 1958.
(22249|22258) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1028784228.
(22249|22258) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1028784228.
(22249|22258) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1028786186.
(22249|22258) DBG:       Now, bytes == 0 .
(22249|22258) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:   Start processing the data we just received.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784228.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
03 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784256.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 01 00 00 00   ................
04 4b 80 61 00 77 b8 20  01 03 00 00 1e a0 de c0   .K.a.w. ........
00 00 00 03 00 00 01 02  00 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 6f 00 00 00  00 00 00 00 04 00 00 00   ....o...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784296.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784296 this->payload_->wr_ptr() == 1028784300.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784300.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.548960000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x01, Timestamp: 1635797764.548960000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::writer_became_alive: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) from writer 01030000.1ea0dec0.00000003.00000102(0e50a218) previous state NOT_SET.
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x1000.
(22249|22258) DataReaderImpl::notify_liveliness_change: listener at 0x57592ae0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.00000507(2736ba23), listener at: 0x0x563357592ae0
	NOTIFY: writer[ 01030000.1ea0dec0.00000003.00000102(0e50a218)] == ALIVE
(22249|22251) DataReaderImpl::handle_timeout: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) has 0 live writers; from_reactor=0
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 9 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784300.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  6f 00 00 00 00 00 00 00   DCPS....o.......
04 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 111.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784328.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 47 00 00 00  00 00 00 00 02 00 00 00   ....G...........
04 4b 80 61 00 77 b8 20  01 03 00 00 1e a0 de c0   .K.a.w. ........
00 00 00 03 00 00 01 02  22 00 00 00 53 70 69 6c   ........"...Spil
6c 20 74 68 65 20 42 65  61 6e 73 20 43 6f 66 66   l the Beans Coff
(22249|22258) DBG:   The demarshalled sample header says that we have 71 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 71.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784368.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 71
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784368 this->payload_->wr_ptr() == 1028784439.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784439.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 71, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.548960000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 71, Byte order: Little Endian, Sequence: 0x02, Timestamp: 1635797764.548960000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 9 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784439.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
05 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784467.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 03 00 00 00   ................
04 4b 80 61 00 53 be 20  01 03 00 00 1e a0 de c0   .K.a.S. ........
00 00 00 03 00 00 01 02  01 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 6f 00 00 00  00 00 00 00 06 00 00 00   ....o...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784507.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784507 this->payload_->wr_ptr() == 1028784511.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784511.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.549344000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.549344000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 10 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784511.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  6f 00 00 00 00 00 00 00   DCPS....o.......
06 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 111.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784539.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 47 00 00 00  00 00 00 00 04 00 00 00   ....G...........
04 4b 80 61 00 53 be 20  01 03 00 00 1e a0 de c0   .K.a.S. ........
00 00 00 03 00 00 01 02  22 00 00 00 53 70 69 6c   ........"...Spil
6c 20 74 68 65 20 42 65  61 6e 73 20 43 6f 66 66   l the Beans Coff
(22249|22258) DBG:   The demarshalled sample header says that we have 71 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 71.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784579.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 71
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784579 this->payload_->wr_ptr() == 1028784650.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784650.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 71, Byte order: Little Endian, Sequence: 0x04, Timestamp: 1635797764.549344000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 71, Byte order: Little Endian, Sequence: 0x04, Timestamp: 1635797764.549344000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 10 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784650.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
07 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784678.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 05 00 00 00   ................
04 4b 80 61 70 d5 c1 20  01 03 00 00 1e a0 de c0   .K.ap.. ........
00 00 00 03 00 00 01 02  02 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 5a 00 00 00  00 00 00 00 08 00 00 00   ....Z...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784718.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784718 this->payload_->wr_ptr() == 1028784722.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784722.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.549574000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.549574000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 11 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784722.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  5a 00 00 00 00 00 00 00   DCPS....Z.......
08 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 90.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784750.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 32 00 00 00  00 00 00 00 06 00 00 00   ....2...........
04 4b 80 61 70 d5 c1 20  01 03 00 00 1e a0 de c0   .K.ap.. ........
00 00 00 03 00 00 01 02  12 00 00 00 54 69 72 65   ............Tire
64 20 45 79 65 73 20 43  6f 66 66 65 65 00 07 00   d Eyes Coffee...
(22249|22258) DBG:   The demarshalled sample header says that we have 50 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 50.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784790.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 50
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784790 this->payload_->wr_ptr() == 1028784840.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784840.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 50, Byte order: Little Endian, Sequence: 0x06, Timestamp: 1635797764.549574000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 50, Byte order: Little Endian, Sequence: 0x06, Timestamp: 1635797764.549574000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 11 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784840.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
09 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784868.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 07 00 00 00   ................
04 4b 80 61 00 29 c5 20  01 03 00 00 1e a0 de c0   .K.a.). ........
00 00 00 03 00 00 01 02  03 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 5a 00 00 00  00 00 00 00 0a 00 00 00   ....Z...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784908.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784908 this->payload_->wr_ptr() == 1028784912.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784912.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x07, Timestamp: 1635797764.549792000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x07, Timestamp: 1635797764.549792000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 12 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784912.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  5a 00 00 00 00 00 00 00   DCPS....Z.......
0a 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 90.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784940.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 32 00 00 00  00 00 00 00 08 00 00 00   ....2...........
04 4b 80 61 00 29 c5 20  01 03 00 00 1e a0 de c0   .K.a.). ........
00 00 00 03 00 00 01 02  0d 00 00 00 4a 61 6d 65   ............Jame
73 20 43 6f 66 66 65 65  00 07 00 00 00 63 6f 66   s Coffee.....cof
(22249|22258) DBG:   The demarshalled sample header says that we have 50 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 50.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028784980.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 50
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784980 this->payload_->wr_ptr() == 1028785030.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785030.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 50, Byte order: Little Endian, Sequence: 0x08, Timestamp: 1635797764.549792000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 50, Byte order: Little Endian, Sequence: 0x08, Timestamp: 1635797764.549792000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 12 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785030.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
0b 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785058.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 09 00 00 00   ................
04 4b 80 61 c0 74 c8 20  01 03 00 00 1e a0 de c0   .K.a.t. ........
00 00 00 03 00 00 01 02  04 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 5f 00 00 00  00 00 00 00 0c 00 00 00   ...._...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785098.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785098 this->payload_->wr_ptr() == 1028785102.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785102.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x09, Timestamp: 1635797764.550008000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x09, Timestamp: 1635797764.550008000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 13 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785102.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  5f 00 00 00 00 00 00 00   DCPS...._.......
0c 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 95.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785130.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 37 00 00 00  00 00 00 00 0a 00 00 00   ....7...........
04 4b 80 61 c0 74 c8 20  01 03 00 00 1e a0 de c0   .K.a.t. ........
00 00 00 03 00 00 01 02  13 00 00 00 42 6c 75 65   ............Blue
20 42 6f 74 74 6c 65 20  43 6f 66 66 65 65 00 07    Bottle Coffee..
(22249|22258) DBG:   The demarshalled sample header says that we have 55 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 55.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785170.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 55
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785170 this->payload_->wr_ptr() == 1028785225.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785225.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 55, Byte order: Little Endian, Sequence: 0x0a, Timestamp: 1635797764.550008000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 55, Byte order: Little Endian, Sequence: 0x0a, Timestamp: 1635797764.550008000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 13 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785225.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
0d 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785253.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 0b 00 00 00   ................
04 4b 80 61 c0 df cb 20  01 03 00 00 1e a0 de c0   .K.a... ........
00 00 00 03 00 00 01 02  05 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 5c 00 00 00  00 00 00 00 0e 00 00 00   ....\...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785293.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785293 this->payload_->wr_ptr() == 1028785297.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785297.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0b, Timestamp: 1635797764.550232000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0b, Timestamp: 1635797764.550232000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 14 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785297.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  5c 00 00 00 00 00 00 00   DCPS....\.......
0e 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 92.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785325.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 34 00 00 00  00 00 00 00 0c 00 00 00   ....4...........
04 4b 80 61 c0 df cb 20  01 03 00 00 1e a0 de c0   .K.a... ........
00 00 00 03 00 00 01 02  14 00 00 00 45 6c 69 78   ............Elix
69 72 20 45 73 70 72 65  73 73 6f 20 42 61 72 00   ir Espresso Bar.
(22249|22258) DBG:   The demarshalled sample header says that we have 52 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 52.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785365.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 52
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785365 this->payload_->wr_ptr() == 1028785417.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785417.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 52, Byte order: Little Endian, Sequence: 0x0c, Timestamp: 1635797764.550232000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 52, Byte order: Little Endian, Sequence: 0x0c, Timestamp: 1635797764.550232000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 14 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785417.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
0f 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785445.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 0d 00 00 00   ................
04 4b 80 61 58 85 cf 20  01 03 00 00 1e a0 de c0   .K.aX.. ........
00 00 00 03 00 00 01 02  06 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 63 00 00 00  00 00 00 00 10 00 00 00   ....c...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785485.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785485 this->payload_->wr_ptr() == 1028785489.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785489.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0d, Timestamp: 1635797764.550471000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0d, Timestamp: 1635797764.550471000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 15 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785489.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  63 00 00 00 00 00 00 00   DCPS....c.......
10 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 99.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785517.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 3b 00 00 00  00 00 00 00 0e 00 00 00   ....;...........
04 4b 80 61 58 85 cf 20  01 03 00 00 1e a0 de c0   .K.aX.. ........
00 00 00 03 00 00 01 02  10 00 00 00 43 6f 6d 6d   ............Comm
75 6e 61 6c 20 43 6f 66  66 65 65 00 07 00 00 00   unal Coffee.....
(22249|22258) DBG:   The demarshalled sample header says that we have 59 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 59.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785557.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 59
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785557 this->payload_->wr_ptr() == 1028785616.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785616.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 59, Byte order: Little Endian, Sequence: 0x0e, Timestamp: 1635797764.550471000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 59, Byte order: Little Endian, Sequence: 0x0e, Timestamp: 1635797764.550471000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 15 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785616.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
11 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785644.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 0f 00 00 00   ................
04 4b 80 61 78 44 d2 20  01 03 00 00 1e a0 de c0   .K.axD. ........
00 00 00 03 00 00 01 02  07 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 52 00 00 00  00 00 00 00 12 00 00 00   ....R...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785684.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785684 this->payload_->wr_ptr() == 1028785688.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785688.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0f, Timestamp: 1635797764.550651000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x0f, Timestamp: 1635797764.550651000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 16 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785688.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  52 00 00 00 00 00 00 00   DCPS....R.......
12 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 82.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785716.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 2a 00 00 00  00 00 00 00 10 00 00 00   ....*...........
04 4b 80 61 78 44 d2 20  01 03 00 00 1e a0 de c0   .K.axD. ........
00 00 00 03 00 00 01 02  0a 00 00 00 43 6f 70 61   ............Copa
20 56 69 64 61 00 07 00  00 00 63 6f 66 66 65 65    Vida.....coffee
(22249|22258) DBG:   The demarshalled sample header says that we have 42 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 42.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785756.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 42
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785756 this->payload_->wr_ptr() == 1028785798.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785798.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 42, Byte order: Little Endian, Sequence: 0x10, Timestamp: 1635797764.550651000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 42, Byte order: Little Endian, Sequence: 0x10, Timestamp: 1635797764.550651000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 16 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785798.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
13 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785826.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 11 00 00 00   ................
04 4b 80 61 f8 f3 d4 20  01 03 00 00 1e a0 de c0   .K.a... ........
00 00 00 03 00 00 01 02  08 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 61 00 00 00  00 00 00 00 14 00 00 00   ....a...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785866.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785866 this->payload_->wr_ptr() == 1028785870.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785870.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x11, Timestamp: 1635797764.550827000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x11, Timestamp: 1635797764.550827000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 17 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785870.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  61 00 00 00 00 00 00 00   DCPS....a.......
14 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 97.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785898.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 39 00 00 00  00 00 00 00 12 00 00 00   ....9...........
04 4b 80 61 f8 f3 d4 20  01 03 00 00 1e a0 de c0   .K.a... ........
00 00 00 03 00 00 01 02  0e 00 00 00 48 6f 6c 73   ............Hols
65 6d 20 43 6f 66 66 65  65 00 07 00 00 00 63 6f   em Coffee.....co
(22249|22258) DBG:   The demarshalled sample header says that we have 57 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 57.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785938.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 57
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028785938 this->payload_->wr_ptr() == 1028785995.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785995.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 57, Byte order: Little Endian, Sequence: 0x12, Timestamp: 1635797764.550827000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 57, Byte order: Little Endian, Sequence: 0x12, Timestamp: 1635797764.550827000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 17 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028785995.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
15 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786023.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
02 00 01 02 04 00 00 00  00 00 00 00 13 00 00 00   ................
04 4b 80 61 60 a7 d7 20  01 03 00 00 1e a0 de c0   .K.a`.. ........
00 00 00 03 00 00 01 02  09 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 5b 00 00 00  00 00 00 00 16 00 00 00   ....[...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786063.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786063 this->payload_->wr_ptr() == 1028786067.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786067.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x13, Timestamp: 1635797764.551004000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: INSTANCE_REGISTRATION (0x02), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x13, Timestamp: 1635797764.551004000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 18 is_new_instance 1 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786067.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  5b 00 00 00 00 00 00 00   DCPS....[.......
16 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 91.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786095.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
00 00 01 00 33 00 00 00  00 00 00 00 14 00 00 00   ....3...........
04 4b 80 61 60 a7 d7 20  01 03 00 00 1e a0 de c0   .K.a`.. ........
00 00 00 03 00 00 01 02  0b 00 00 00 54 68 65 20   ............The 
4d 75 64 62 61 72 00 07  00 00 00 63 6f 66 66 65   Mudbar.....coffe
(22249|22258) DBG:   The demarshalled sample header says that we have 51 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 51.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786135.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   amount of data for the next block in the chain is 51
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786135 this->payload_->wr_ptr() == 1028786186.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786186.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786186.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: SAMPLE_DATA (0x00), Length: 51, Byte order: Little Endian, Sequence: 0x14, Timestamp: 1635797764.551004000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: SAMPLE_DATA (0x00), Length: 51, Byte order: Little Endian, Sequence: 0x14, Timestamp: 1635797764.551004000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DataReaderImpl::data_received: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) writer 01030000.1ea0dec0.00000003.00000102(0e50a218) instance 18 is_new_instance 0 filtered 0
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   We are done - no more data.
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==63494, base==3d52080a
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 68 - we call this the bytes_remaining.
(22249|22258) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:    -> At top of for..loop block.
(22249|22258) DBG:       index == 0 bytes == 68 amount == 68.
(22249|22258) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1028786186.
(22249|22258) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1028786186.
(22249|22258) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1028786254.
(22249|22258) DBG:       Now, bytes == 0 .
(22249|22258) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:   Start processing the data we just received.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786186.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786254.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  28 00 00 00 00 00 00 00   DCPS....(.......
17 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 40.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786214.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786254.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
06 00 01 02 00 00 00 00  00 00 00 00 15 00 00 00   ................
04 4b 80 61 f0 7d da 20  01 03 00 00 1e a0 de c0   .K.a.}. ........
00 00 00 03 00 00 01 02  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
(22249|22258) DBG:   The demarshalled sample header says that we have 0 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 0.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DBG:  received REQUEST_ACK
(22249|22258) DBG:   Send element msg() has total_length() == [40].
(22249|22258) DBG:   this->max_header_size_ == [28].
(22249|22258) DBG:   this->max_size_ == [2147481599].
(22249|22258) DBG:   this->mode_ == MODE_DIRECT.
(22249|22258) DBG:   The element DOES require an exclusive packet.
(22249|22258) DBG:   Start the 'append elem' to current packet logic.
(22249|22258) DBG:   Put element into current packet elems_.
(22249|22258) DBG:   Before, the header_.length_ == [0].
(22249|22258) DBG:   After adding element's length, the header_.length_ == [40].
(22249|22258) DBG:   Now the current packet looks full - send it (directly).
(22249|22258) DBG:   Prepare the current packet for a direct send attempt.
(22249|22258) DBG:   Marshal the packet header.
(22249|22258) DBG:   Use a BuildChainVisitor to visit the packet elems_.
(22249|22258) DBG:   Attach the visitor's chain of blocks to the lone (packet header) block currently in the pkt_chain_.
(22249|22258) DBG:   Increment header sequence for next packet.
(22249|22258) DBG:   Set the header_complete_ flag to false.
(22249|22258) DBG:   Now attempt to send the packet.
(22249|22258) DBG:   Populate the iovec array using the packet.
(22249|22258) DBG:   There are [2] number of entries in the iovec array.
(22249|22258) DBG:   Attempt to send_bytes() now.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 117 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 105 data bytes, my endian, Type Request[11]
GIOP message - HEXDUMP 117 bytes
47 49 4f 50 01 02 01 00  69 00 00 00 0b 00 00 00   GIOP....i.......
00 00 00 00 00 00 00 00  23 00 00 00 14 01 0f 00   ........#.......
4e 53 54 04 4b 80 61 07  64 07 00 01 00 00 00 01   NST.K.a.d.......
00 00 00 04 00 00 00 01  00 00 00 05 00 00 00 52   ...............R
14 00 00 00 72 65 6d 6f  76 65 5f 61 73 73 6f 63   ....remove_assoc
69 61 74 69 6f 6e 73 00  00 00 00 00 1e a0 de c0   iations.........
01 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 03   ................
00 00 01 02 00                                     .....           
(22249|22252) DataReaderImpl::remove_associations: bit 0 local 01030000.1ea0dec0.00000002.00000507(2736ba23) remote 01030000.1ea0dec0.00000003.00000102(0e50a218) num remotes 1
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63372, base==3eb63884
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129412.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129412.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129496.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129412.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129496.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
13 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129440.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129496.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
04 00 01 02 10 00 00 00  00 00 00 00 03 00 00 00   ................
04 4b 80 61 68 91 8f 21  01 03 00 00 1e a0 de c0   .K.ah..!........
00 00 00 01 00 00 04 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 02  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129480.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129496.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129480 this->payload_->wr_ptr() == 1052129496.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129496.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129496.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000004c2(9283c78d) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.563057000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000003c7(ea08df15) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x03, Timestamp: 1635797764.563057000, Publication: 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22251) RemoveAssociationSweeper::ScheduleCommand::execute() - Scheduled sweeper 7
(22249|22258) TcpSendStrategy::send_bytes_i sent 68 bytes
(22249|22258) DBG:   The sendv() returned [68].
(22249|22258) DBG:   The send_bytes() said that num_bytes_sent == [68].
(22249|22258) DBG:   Since num_bytes_sent > 0, adjust the packet to account for the bytes that did get sent.
(22249|22258) DBG:   Adjusting the current packet because 68 bytes of the packet have been sent.
(22249|22258) DBG:   Set num_bytes_left to 68.
(22249|22258) DBG:   Set num_non_header_bytes_sent to 0.
(22249|22258) DBG:   Peek at the element at the front of the packet elems_.
(22249|22258) DBG:   Use the element's msg() to find the last block in the msg() chain.
(22249|22258) DBG:   Start with tail block == element->msg().
(22249|22258) DBG:   Tail block now set (because tail block's cont() is 0).
(22249|22258) DBG:   Start the 'while (num_bytes_left > 0)' loop.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [68].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [28].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [28]).
(22249|22258) DBG:   Now, num_bytes_left == [40].
(22249|22258) DBG:   Since the header_complete_ flag is false, it means that the packet header block was still in the pkt_chain_.
(22249|22258) DBG:   Not anymore...  Set the header_complete_ flag to true.
(22249|22258) DBG:   Release the fully sent block.
(22249|22258) DBG:   At top of 'num bytes left' loop.  num_bytes_left == [40].
(22249|22258) DBG:   Length of block at front of pkt_chain_ is [40].
(22249|22258) DBG:   The whole block at the front of pkt_chain_ was sent.
(22249|22258) DBG:   Extract the fully sent block from the pkt_chain_.
(22249|22258) DBG:   Set pkt_chain_ to pkt_chain_->cont().
(22249|22258) DBG:   Set the fully sent block's cont() to 0.
(22249|22258) DBG:   Updated num_bytes_left to account for fully sent block (block_length == [40]).
(22249|22258) DBG:   Now, num_bytes_left == [0].
(22249|22258) DBG:   Since the header_complete_ flag is true, it means that the packet header block was not in the pkt_chain_.
(22249|22258) DBG:   So, the fully sent block was part of an element.
(22249|22258) DBG:   Updated num_non_header_bytes_sent to account for fully sent block (block_length == [40]).
(22249|22258) DBG:   Now, num_non_header_bytes_sent == [40].
(22249|22258) DBG:   Ok.  The fully sent block was a duplicate of the tail block of the element that is at the front of the packet elems_.
(22249|22258) DBG:   This means that we have completely sent the element at the front of the packet elems_.
(22249|22258) DBG:   We can release the fully sent block now.
(22249|22258) DBG:   We can extract the element from the front of the packet elems_ (we were just peeking).
(22249|22258) DBG:   Tell the element that a decision has been made regarding its fate - data_delivered().
(22249|22258) DBG:   Peek at the next element in the packet elems_.
(22249|22258) DBG:   The 'num_bytes_left' loop has completed.
(22249|22258) DBG:   Adjust the header_.length_ to account for the num_non_header_bytes_sent.
(22249|22258) DBG:   Before, header_.length_ == 40.
(22249|22258) DBG:   After, header_.length_ == 0.
(22249|22258) DBG:   Adjustments all done.  Returning [0].  0 means entire packet has been sent.  1 means otherwise.
(22249|22258) DBG:   The adjustment logic says that the complete packet was sent.  Return OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   The outcome of the send_packet() was 0.
(22249|22258) DBG:   The outcome of the send_packet() must have been OUTCOME_COMPLETE_SEND.
(22249|22258) DBG:   So, we will just stay in MODE_DIRECT.
(22249|22258) DBG:   Back from the direct_send() attempt.
(22249|22258) DBG:   And we stayed in MODE_DIRECT as a result of the direct_send() call.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   We are done - no more data.
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==63426, base==3d52084e
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 720 - we call this the bytes_remaining.
(22249|22258) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:    -> At top of for..loop block.
(22249|22258) DBG:       index == 0 bytes == 720 amount == 720.
(22249|22258) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1028786254.
(22249|22258) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1028786254.
(22249|22258) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1028786974.
(22249|22258) DBG:       Now, bytes == 0 .
(22249|22258) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:   Start processing the data we just received.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786254.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
18 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786282.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 16 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  00 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 19 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786322.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786322 this->payload_->wr_ptr() == 1028786326.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786326.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x16, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x16, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786326.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
19 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786354.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 17 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  01 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1a 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786394.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786394 this->payload_->wr_ptr() == 1028786398.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786398.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x17, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x17, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786398.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1a 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786426.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 18 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  02 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1b 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786466.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786466 this->payload_->wr_ptr() == 1028786470.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786470.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x18, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x18, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63288, base==3eb638d8
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129496.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129496.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129580.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129496.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129580.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
14 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129524.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129580.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
04 00 01 02 10 00 00 00  00 00 00 00 05 00 00 00   ................
04 4b 80 61 38 ca 6c 22  01 03 00 00 1e a0 de c0   .K.a8.l"........
00 00 00 01 00 00 02 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 08 45  00 00 00 00 00 00 00 00   .......E........
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129564.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129580.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129564 this->payload_->wr_ptr() == 1052129580.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129580.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129580.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000002c2(c4d9600b) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.577555000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000002c7(f313ee54) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.577555000, Publication: 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786470.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1b 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786498.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 19 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  03 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1c 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786538.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786538 this->payload_->wr_ptr() == 1028786542.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786542.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x19, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x19, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786542.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1c 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786570.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1a 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  04 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1d 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786610.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786610 this->payload_->wr_ptr() == 1028786614.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786614.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1a, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1a, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786614.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1d 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786642.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1b 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  05 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1e 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786682.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786682 this->payload_->wr_ptr() == 1028786686.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786686.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1b, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1b, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63204, base==3eb6392c
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 84 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 84 amount == 84.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129580.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129580.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129664.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129580.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129664.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  38 00 00 00 00 00 00 00   DCPS....8.......
15 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 56.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129608.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129664.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
04 00 01 02 10 00 00 00  00 00 00 00 05 00 00 00   ................
04 4b 80 61 90 10 ce 22  01 03 00 00 1e a0 de c0   .K.a..."........
00 00 00 01 00 00 01 c2  01 03 00 00 1e a0 de c0   ................
00 00 00 03 00 00 01 c1  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 16 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 16.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129648.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129664.
(22249|22256) DBG:   amount of data for the next block in the chain is 16
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129648 this->payload_->wr_ptr() == 1052129664.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129664.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129664.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000001.000001c2(eff433c8) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.583930000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22256) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22256) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) received sample: DISPOSE_INSTANCE (0x04), Length: 16, Byte order: Little Endian, Key Fields Only, Sequence: 0x05, Timestamp: 1635797764.583930000, Publication: 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) ConditionImpl::signal_all()
(22249|22256) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22256) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786686.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1e 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786714.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1c 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  06 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 1f 00 00 00   ....,...........
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786754.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786754 this->payload_->wr_ptr() == 1028786758.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786758.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1c, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1c, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786758.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
1f 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786786.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1d 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  07 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 20 00 00 00   ....,....... ...
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786826.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786826 this->payload_->wr_ptr() == 1028786830.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786830.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1d, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1d, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786830.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
20 00 00 00 00 00 00 00  00 00 00 00                ...........    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786858.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1e 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  08 00 00 00 44 43 50 53   ............DCPS
02 00 01 00 2c 00 00 00  00 00 00 00 21 00 00 00   ....,.......!...
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786898.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786898 this->payload_->wr_ptr() == 1028786902.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786902.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1e, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1e, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Let's try to do some more.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786902.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  2c 00 00 00 00 00 00 00   DCPS....,.......
21 00 00 00 00 00 00 00  00 00 00 00               !...........    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 44.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786930.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
0a 00 01 02 04 00 00 00  00 00 00 00 1f 00 00 00   ................
04 4b 80 61 00 1b 6e 21  01 03 00 00 1e a0 de c0   .K.a..n!........
00 00 00 03 00 00 01 02  09 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
(22249|22258) DBG:   The demarshalled sample header says that we have 4 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 4.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786970.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   amount of data for the next block in the chain is 4
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028786970 this->payload_->wr_ptr() == 1028786974.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786974.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028786974.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DataLink::data_received_i: from publication 01030000.1ea0dec0.00000003.00000102(0e50a218) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1f, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218) to readerId 00000000.00000000.00000000.00000000(ecbb4b55) (SET_EXCLUDED).
(22249|22258) DataLink::data_received_i - normal data received to each subscription in listener_set exclude ids:
(22249|22258) DataReaderImpl::data_received: 01030000.1ea0dec0.00000002.00000507(2736ba23) received sample: DISPOSE_UNREGISTER_INSTANCE (0x0a), Length: 4, Byte order: Little Endian, Key Fields Only, Sequence: 0x1f, Timestamp: 1635797764.560864000, Publication: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22258) InstanceState::unregister_was_received on 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22258) ConditionImpl::signal_all()
(22249|22258) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x200.
(22249|22258) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   We are done - no more data.
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==62706, base==3d520b1e
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 88 - we call this the bytes_remaining.
(22249|22258) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:    -> At top of for..loop block.
(22249|22258) DBG:       index == 0 bytes == 88 amount == 88.
(22249|22258) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1028786974.
(22249|22258) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1028786974.
(22249|22258) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1028787062.
(22249|22258) DBG:       Now, bytes == 0 .
(22249|22258) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22258) DBG:   Start processing the data we just received.
(22249|22258) DBG:   We are expecting a transport packet header.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028786974.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028787062.
(22249|22258) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22258) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  3c 00 00 00 00 00 00 00   DCPS....<.......
22 00 00 00 00 00 00 00  00 00 00 00               "...........    
(22249|22258) DBG:   Amount of transport packet bytes (remaining): 60.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22258) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028787002.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028787062.
(22249|22258) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22258) DBG:   Hex Dump:
05 00 01 00 14 00 00 00  00 00 00 00 01 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  30 7b b2 92 d0 55 00 00   ........0{...U..
00 00 00 00 00 00 00 00  20 00 00 00 00 00 00 00   ........ .......
(22249|22258) DBG:   The demarshalled sample header says that we have 20 bytes to read for the data portion of the sample.
(22249|22258) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22258) DBG:   Amount of transport packet remaining: 20.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Determine amount of data for the next block in the chain
(22249|22258) DBG:   this->buffer_index_ == 0.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028787042.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028787062.
(22249|22258) DBG:   amount of data for the next block in the chain is 20
(22249|22258) DBG:   Before adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028784144 this->payload_->wr_ptr() == 1028784144.
(22249|22258) DBG:   After adjustment of the pointers and byte counters
(22249|22258) DBG:   this->payload_->rd_ptr() == 1028787042 this->payload_->wr_ptr() == 1028787062.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1028787062.
(22249|22258) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1028787062.
(22249|22258) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22258) DBG:   Now dispatch the sample to the DataLink
(22249|22258) DBG:  received GRACEFUL_DISCONNECT
(22249|22258) DBG:   Release the sample that we just sent.
(22249|22258) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22258) DBG:   Set this->buffer_index_ = 1.
(22249|22258) DBG:   Set this->buffer_index_ = 2.
(22249|22258) DBG:   Set this->buffer_index_ = 3.
(22249|22258) DBG:   Set this->buffer_index_ = 4.
(22249|22258) DBG:   Set this->buffer_index_ = 5.
(22249|22258) DBG:   Set this->buffer_index_ = 6.
(22249|22258) DBG:   Set this->buffer_index_ = 7.
(22249|22258) DBG:   Set this->buffer_index_ = 8.
(22249|22258) DBG:   Set this->buffer_index_ = 9.
(22249|22258) DBG:   Set this->buffer_index_ = 10.
(22249|22258) DBG:   Set this->buffer_index_ = 11.
(22249|22258) DBG:   Set this->buffer_index_ = 12.
(22249|22258) DBG:   Set this->buffer_index_ = 13.
(22249|22258) DBG:   Set this->buffer_index_ = 14.
(22249|22258) DBG:   Set this->buffer_index_ = 15.
(22249|22258) DBG:   Set this->buffer_index_ = 0.
(22249|22258) DBG:   We are done - no more data.
(22249|22258) DBG:   Form the iovec from the message block
(22249|22258) DBG:   index==0, len==62618, base==3d520b76
(22249|22258) DBG:   index==1, len==65536, base==3d510010
(22249|22258) DBG:   index==2, len==65536, base==3d500010
(22249|22258) DBG:   index==3, len==65536, base==3d4f0010
(22249|22258) DBG:   index==4, len==65536, base==3d4e0010
(22249|22258) DBG:   index==5, len==65536, base==3d4d0010
(22249|22258) DBG:   index==6, len==65536, base==3d4c0010
(22249|22258) DBG:   index==7, len==65536, base==3d4b0010
(22249|22258) DBG:   index==8, len==65536, base==3d4a0010
(22249|22258) DBG:   index==9, len==65536, base==3d490010
(22249|22258) DBG:   index==10, len==65536, base==3d480010
(22249|22258) DBG:   index==11, len==65536, base==3d470010
(22249|22258) DBG:   index==12, len==65536, base==3d460010
(22249|22258) DBG:   index==13, len==65536, base==3d450010
(22249|22258) DBG:   index==14, len==65536, base==3d440010
(22249|22258) DBG:   index==15, len==65536, base==3d430010
(22249|22258) DBG:   Perform the recvv() call
(22249|22258) DBG:   recvv() return 0 - we call this the bytes_remaining.
(22249|22258) Peer has gracefully disconnected.
(22249|22258) TcpConnection::handle_close() called on transport: _OPENDDS_0500_TCP to 127.0.1.1:46035 , reconnect_state = INIT_STATE.
(22249|22258) DBG:  Now flip to MODE_TERMINATED
(22249|22258) DataLink::notify: this(38021C40) notify DISCONNECTED
(22249|22258) DataLink::notify: notify sub 01030000.1ea0dec0.00000002.00000507(2736ba23) DISCONNECTED.
((22249|22251)) RemoveAssociationSweeper::handle_timeout reader: 01030000.1ea0dec0.00000002.00000507(2736ba23) waiting on writer: 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22251) DataReaderImpl::remove_associations_i: bit 0 local 01030000.1ea0dec0.00000002.00000507(2736ba23) remote 01030000.1ea0dec0.00000003.00000102(0e50a218) num remotes 1
(22249|22251) DataReaderImpl::writer_removed: reader 01030000.1ea0dec0.00000002.00000507(2736ba23) from writer 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x1000.
(22249|22251) DataReaderImpl::notify_liveliness_change: listener at 0x57592ae0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.00000507(2736ba23), listener at: 0x0x563357592ae0
	NOTIFY: writer[ 01030000.1ea0dec0.00000003.00000102(0e50a218)] == ALIVE
(22249|22251) DataReaderImpl::lookup_instance_handles: searching for handles for writer Ids: 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22251) TransportClient::disassociate TransportClient(0x5633575b4f90) disassociating from 01030000.1ea0dec0.00000003.00000102(0e50a218)
(22249|22251) TransportClient::disassociate: about to release_reservations for link[0x7fb638021c40]
(22249|22251) DataLink::release_reservations() - releasing association local: 01030000.1ea0dec0.00000002.00000507(2736ba23) <--> with remote 01030000.1ea0dec0.00000003.00000102(0e50a218).
(22249|22251) DataLink::release_reservations: release_datalink due to no remaining pubs or subs.
(22249|22251) TcpTransport::release_datalink link[0x7fb638021c40] PriorityKey prio=0, addr=127.0.1.1:46035, is_loopback=0, is_active=0
(22249|22251) TcpTransport::release_datalink datalink_release_delay is 10 sec 0 usec
(22249|22251) DataLink[0x7fb638021c40]::schedule_delayed_release
(22249|22251) TcpTransport::release_datalink() - link[0x7fb638021c40] with priority 0 released.
   There are 0 local entities currently using this link
(22249|22251) TransportClient::disassociate: about to remove_link[0x7fb638021c40] from links_
(22249|22251) TransportClient::disassociate: calling remove_listener 01030000.1ea0dec0.00000002.00000507(2736ba23) on link[0x7fb638021c40]
(22249|22251) DataLink::remove_listener: removed 01030000.1ea0dec0.00000002.00000507(2736ba23) from recv_listeners
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0x4000, changes==0x5000.
(22249|22251) ConditionImpl::signal_all() - number of sets: 1, locally: 1.
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - TAO_Unique_Id_Strategy::unbind_using_user_id: id=0x010000
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <22>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 136 data bytes, my endian, Type Request[22]
GIOP message - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 16 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 01 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 148 bytes
TAO - Transport[12]::drain_queue_helper (0/148) - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 16 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 01 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 148
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 148, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[22]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 16 00 00 00   GIOP............
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 22
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) DataReaderImpl::remove_associations: bit 1 local 01030000.1ea0dec0.00000002.000001c7(d83ebd97) remote 01030000.1ea0dec0.00000001.000001c2(eff433c8) num remotes 1
(22249|22251) DataReaderImpl::remove_associations_i: bit 1 local 01030000.1ea0dec0.00000002.000001c7(d83ebd97) remote 01030000.1ea0dec0.00000001.000001c2(eff433c8) num remotes 1
(22249|22251) DataReaderImpl::writer_removed: reader 01030000.1ea0dec0.00000002.000001c7(d83ebd97) from writer 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22251) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22251) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000001c7(d83ebd97), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000001c2(eff433c8)] == ALIVE
(22249|22251) TransportClient::disassociate TransportClient(0x56335749de60) disassociating from 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22251) TransportClient::disassociate: about to release_reservations for link[0x7fb6380061d0]
(22249|22251) DataLink::release_reservations() - releasing association local: 01030000.1ea0dec0.00000002.000001c7(d83ebd97) <--> with remote 01030000.1ea0dec0.00000001.000001c2(eff433c8).
(22249|22251) TransportClient::disassociate: about to remove_link[0x7fb6380061d0] from links_
(22249|22251) DataLinkSet::remove_links: link_id 0 not found in map.
(22249|22251) TransportClient::disassociate: calling remove_listener 01030000.1ea0dec0.00000002.000001c7(d83ebd97) on link[0x7fb6380061d0]
(22249|22251) DataLink::remove_listener: removed 01030000.1ea0dec0.00000002.000001c7(d83ebd97) from recv_listeners
(22249|22251) TransportClient::~TransportClient: 01030000.1ea0dec0.00000002.000001c7(d83ebd97)
(22249|22251) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000001c2(eff433c8)
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - TAO_Unique_Id_Strategy::unbind_using_user_id: id=0x030000
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <24>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 136 data bytes, my endian, Type Request[24]
GIOP message - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 18 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 03 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 148 bytes
TAO - Transport[12]::drain_queue_helper (0/148) - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 18 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 03 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 148
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 148, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[24]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 18 00 00 00   GIOP............
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 24
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) DataReaderImpl::remove_associations: bit 1 local 01030000.1ea0dec0.00000002.000003c7(ea08df15) remote 01030000.1ea0dec0.00000001.000004c2(9283c78d) num remotes 1
(22249|22251) DataReaderImpl::remove_associations_i: bit 1 local 01030000.1ea0dec0.00000002.000003c7(ea08df15) remote 01030000.1ea0dec0.00000001.000004c2(9283c78d) num remotes 1
(22249|22251) DataReaderImpl::writer_removed: reader 01030000.1ea0dec0.00000002.000003c7(ea08df15) from writer 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22251) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22251) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000003c7(ea08df15), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000004c2(9283c78d)] == ALIVE
(22249|22251) TransportClient::disassociate TransportClient(0x5633575ab420) disassociating from 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22251) TransportClient::disassociate: about to release_reservations for link[0x7fb6380061d0]
(22249|22251) DataLink::release_reservations() - releasing association local: 01030000.1ea0dec0.00000002.000003c7(ea08df15) <--> with remote 01030000.1ea0dec0.00000001.000004c2(9283c78d).
(22249|22251) TransportClient::disassociate: about to remove_link[0x7fb6380061d0] from links_
(22249|22251) DataLinkSet::remove_links: link_id 0 not found in map.
(22249|22251) TransportClient::disassociate: calling remove_listener 01030000.1ea0dec0.00000002.000003c7(ea08df15) on link[0x7fb6380061d0]
(22249|22251) DataLink::remove_listener: removed 01030000.1ea0dec0.00000002.000003c7(ea08df15) from recv_listeners
(22249|22251) TransportClient::~TransportClient: 01030000.1ea0dec0.00000002.000003c7(ea08df15)
(22249|22251) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000004c2(9283c78d)
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - TAO_Unique_Id_Strategy::unbind_using_user_id: id=0x040000
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <26>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 136 data bytes, my endian, Type Request[26]
GIOP message - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1a 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 04 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 148 bytes
TAO - Transport[12]::drain_queue_helper (0/148) - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1a 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 04 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 148
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 148, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[26]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 1a 00 00 00   GIOP............
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 26
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) DataReaderImpl::remove_associations: bit 1 local 01030000.1ea0dec0.00000002.000004c7(a54949d2) remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a) num remotes 1
(22249|22251) DataReaderImpl::remove_associations_i: bit 1 local 01030000.1ea0dec0.00000002.000004c7(a54949d2) remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a) num remotes 1
(22249|22251) DataReaderImpl::writer_removed: reader 01030000.1ea0dec0.00000002.000004c7(a54949d2) from writer 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22251) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22251) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000004c7(a54949d2), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000003c2(ddc2514a)] == ALIVE
(22249|22251) TransportClient::disassociate TransportClient(0x5633575afcb0) disassociating from 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22251) TransportClient::disassociate: about to release_reservations for link[0x7fb6380061d0]
(22249|22251) DataLink::release_reservations() - releasing association local: 01030000.1ea0dec0.00000002.000004c7(a54949d2) <--> with remote 01030000.1ea0dec0.00000001.000003c2(ddc2514a).
(22249|22251) TransportClient::disassociate: about to remove_link[0x7fb6380061d0] from links_
(22249|22251) DataLinkSet::remove_links: link_id 0 not found in map.
(22249|22251) TransportClient::disassociate: calling remove_listener 01030000.1ea0dec0.00000002.000004c7(a54949d2) on link[0x7fb6380061d0]
(22249|22251) DataLink::remove_listener: removed 01030000.1ea0dec0.00000002.000004c7(a54949d2) from recv_listeners
(22249|22251) TransportClient::~TransportClient: 01030000.1ea0dec0.00000002.000004c7(a54949d2)
(22249|22251) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000003c2(ddc2514a)
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - TAO_Unique_Id_Strategy::unbind_using_user_id: id=0x020000
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <28>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 136 data bytes, my endian, Type Request[28]
GIOP message - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1c 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 02 c7                                        ....            
(22249|22258) DataLink::handle_exception() - (delay) scheduling timer for future release
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 148 bytes
TAO - Transport[12]::drain_queue_helper (0/148) - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1c 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 02 c7                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 148
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 148, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63120, base==3eb63980
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 88 - we call this the bytes_remaining.
(22249|22256) DBG:   START Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:    -> At top of for..loop block.
(22249|22256) DBG:       index == 0 bytes == 88 amount == 88.
(22249|22256) DBG:       this->receive_buffers_[index]->rd_ptr() ==  1052129664.
(22249|22256) DBG:       this->receive_buffers_[index]->wr_ptr() ==  1052129664.
(22249|22256) DBG:       Now, this->receive_buffers_[index]->wr_ptr() ==  1052129752.
(22249|22256) DBG:       Now, bytes == 0 .
(22249|22256) DBG:   DONE Adjust the message block chain pointers to account for the new data.
(22249|22256) DBG:   Start processing the data we just received.
(22249|22256) DBG:   We are expecting a transport packet header.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129664.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129752.
(22249|22256) DBG:   We have enough bytes to demarshall the transport packet header.
(22249|22256) DBG:   Hex Dump of transport header block (28 bytes):
44 43 50 53 02 00 01 00  3c 00 00 00 00 00 00 00   DCPS....<.......
16 00 00 00 00 00 00 00  00 00 00 00               ............    
(22249|22256) DBG:   Amount of transport packet bytes (remaining): 60.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   We have a transport packet now.  There are more sample bytes to parse in order to complete the packet.
(22249|22256) DBG:   We are not working on some remaining sample data.  We are expecting to parse a sample header now.
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129692.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129752.
(22249|22256) DBG:   We have received enough bytes for the sample header.  Demarshall the sample header now.
(22249|22256) DBG:   Hex Dump:
05 00 01 00 14 00 00 00  00 00 00 00 01 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   ................
(22249|22256) DBG:   The demarshalled sample header says that we have 20 bytes to read for the data portion of the sample.
(22249|22256) DBG:   this->data_sample_header_.get_serialized_size() == 40.
(22249|22256) DBG:   Amount of transport packet remaining: 20.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Determine amount of data for the next block in the chain
(22249|22256) DBG:   this->buffer_index_ == 0.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129732.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129752.
(22249|22256) DBG:   amount of data for the next block in the chain is 20
(22249|22256) DBG:   Before adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052127248 this->payload_->wr_ptr() == 1052127248.
(22249|22256) DBG:   After adjustment of the pointers and byte counters
(22249|22256) DBG:   this->payload_->rd_ptr() == 1052129732 this->payload_->wr_ptr() == 1052129752.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->rd_ptr() == 1052129752.
(22249|22256) DBG:   this->receive_buffers_[this->buffer_index_]->wr_ptr() == 1052129752.
(22249|22256) DBG:   After adjustment, remaining sample bytes == 0 and remaining transport packet bytes == 0
(22249|22256) DBG:   Now dispatch the sample to the DataLink
(22249|22256) DBG:  received GRACEFUL_DISCONNECT
(22249|22256) DBG:   Release the sample that we just sent.
(22249|22256) DBG:   Adjust the buffer chain in case we crossed into the next buffer after the last read(s).
(22249|22256) DBG:   Set this->buffer_index_ = 1.
(22249|22256) DBG:   Set this->buffer_index_ = 2.
(22249|22256) DBG:   Set this->buffer_index_ = 3.
(22249|22256) DBG:   Set this->buffer_index_ = 4.
(22249|22256) DBG:   Set this->buffer_index_ = 5.
(22249|22256) DBG:   Set this->buffer_index_ = 6.
(22249|22256) DBG:   Set this->buffer_index_ = 7.
(22249|22256) DBG:   Set this->buffer_index_ = 8.
(22249|22256) DBG:   Set this->buffer_index_ = 9.
(22249|22256) DBG:   Set this->buffer_index_ = 10.
(22249|22256) DBG:   Set this->buffer_index_ = 11.
(22249|22256) DBG:   Set this->buffer_index_ = 12.
(22249|22256) DBG:   Set this->buffer_index_ = 13.
(22249|22256) DBG:   Set this->buffer_index_ = 14.
(22249|22256) DBG:   Set this->buffer_index_ = 15.
(22249|22256) DBG:   Set this->buffer_index_ = 0.
(22249|22256) DBG:   We are done - no more data.
(22249|22256) DBG:   Form the iovec from the message block
(22249|22256) DBG:   index==0, len==63032, base==3eb639d8
(22249|22256) DBG:   index==1, len==65536, base==3eb53010
(22249|22256) DBG:   index==2, len==65536, base==3eb43010
(22249|22256) DBG:   index==3, len==65536, base==3eb33010
(22249|22256) DBG:   index==4, len==65536, base==3eb23010
(22249|22256) DBG:   index==5, len==65536, base==3eb13010
(22249|22256) DBG:   index==6, len==65536, base==3eb03010
(22249|22256) DBG:   index==7, len==65536, base==3eaf3010
(22249|22256) DBG:   index==8, len==65536, base==3eae3010
(22249|22256) DBG:   index==9, len==65536, base==3ead3010
(22249|22256) DBG:   index==10, len==65536, base==3eac3010
(22249|22256) DBG:   index==11, len==65536, base==3eab3010
(22249|22256) DBG:   index==12, len==65536, base==3eaa3010
(22249|22256) DBG:   index==13, len==65536, base==3ea93010
(22249|22256) DBG:   index==14, len==65536, base==3ea83010
(22249|22256) DBG:   index==15, len==65536, base==3ea73010
(22249|22256) DBG:   Perform the recvv() call
(22249|22256) DBG:   recvv() return 0 - we call this the bytes_remaining.
(22249|22256) Peer has gracefully disconnected.
(22249|22256) TcpConnection::handle_close() called on transport: _OPENDDS__BITTCPTransportInst_DEFAULT_REPO to 127.0.1.1:33093 , reconnect_state = INIT_STATE.
(22249|22256) DBG:  Now flip to MODE_TERMINATED
(22249|22256) DataLink::notify: this(380061D0) notify DISCONNECTED
(22249|22256) DataLink::notify: notify sub 01030000.1ea0dec0.00000002.000002c7(f313ee54) DISCONNECTED.
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[28]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 1c 00 00 00   GIOP............
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 28
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) DataReaderImpl::remove_associations: bit 1 local 01030000.1ea0dec0.00000002.000002c7(f313ee54) remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b) num remotes 1
(22249|22251) DataReaderImpl::remove_associations_i: bit 1 local 01030000.1ea0dec0.00000002.000002c7(f313ee54) remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b) num remotes 1
(22249|22251) DataReaderImpl::writer_removed: reader 01030000.1ea0dec0.00000002.000002c7(f313ee54) from writer 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22251) InstanceState::writer_became_dead on 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22251) ConditionImpl::signal_all()
(22249|22251) StatusConditionImpl::get_trigger_value() - mask==0xffffffff, changes==0x1400.
(22249|22251) ConditionImpl::signal_all() - number of sets: 0, locally: 0.
(22249|22251) DataReaderImpl::notify_liveliness_change: listener at 0x0, mask 0xffffffff.
	NOTIFY: subscription 01030000.1ea0dec0.00000002.000002c7(f313ee54), listener at: 0x(nil)
	NOTIFY: writer[ 01030000.1ea0dec0.00000001.000002c2(c4d9600b)] == ALIVE
(22249|22251) TransportClient::disassociate TransportClient(0x5633575a7220) disassociating from 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22251) TransportClient::disassociate: about to release_reservations for link[0x7fb6380061d0]
(22249|22251) DataLink::release_reservations() - releasing association local: 01030000.1ea0dec0.00000002.000002c7(f313ee54) <--> with remote 01030000.1ea0dec0.00000001.000002c2(c4d9600b).
(22249|22251) DataLink::release_reservations: release_datalink due to no remaining pubs or subs.
(22249|22251) TcpTransport::release_datalink link[0x7fb6380061d0] PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22256) DataLink::handle_exception() - delay already elapsed so handle_timeout now
(22249|22256) DataLink::handle_timeout called
(22249|22256) TcpTransport::unbind_link link 0x7fb6380061d0 PriorityKey prio=0, addr=127.0.1.1:33093, is_loopback=0, is_active=0
(22249|22251) TcpTransport::release_datalink() - link[0x7fb6380061d0] with priority 0 released.
   There are 0 local entities currently using this link
(22249|22256) Cached_Allocator_With_Overflow::malloc 0x7fb638009f38 42 pool allocs 42 pool free with 1000 available
(22249|22256) ReactorSynch::~ReactorSynch() [0] - dismantling synch without worker.
(22249|22251) TransportClient::disassociate: about to remove_link[0x7fb6380061d0] from links_
(22249|22251) DataLinkSet::remove_links: link_id 0 not found in map.
(22249|22251) TransportClient::disassociate: calling remove_listener 01030000.1ea0dec0.00000002.000002c7(f313ee54) on link[0x7fb6380061d0]
(22249|22251) DataLink::remove_listener: removed 01030000.1ea0dec0.00000002.000002c7(f313ee54) from recv_listeners
(22249|22251) TransportClient::~TransportClient: 01030000.1ea0dec0.00000002.000002c7(f313ee54)
(22249|22251) TcpTransport::stop_accepting_or_connecting stop connecting to remote: 01030000.1ea0dec0.00000001.000002c2(c4d9600b)
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - TAO_Unique_Id_Strategy::unbind_using_user_id: id=0x050000
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <30>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 136 data bytes, my endian, Type Request[30]
GIOP message - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1e 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 05 07                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 148 bytes
TAO - Transport[12]::drain_queue_helper (0/148) - HEXDUMP 148 bytes
47 49 4f 50 01 02 01 00  88 00 00 00 1e 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
14 00 00 00 72 65 6d 6f  76 65 5f 73 75 62 73 63   ....remove_subsc
72 69 70 74 69 6f 6e 00  00 00 00 00 01 03 00 00   ription.........
2a 00 00 00 01 03 00 00  1e a0 de c0 00 00 00 02   *...............
00 00 01 c1 01 03 00 00  1e a0 de c0 00 00 00 02   ................
00 00 05 07                                        ....            
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 148
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 148, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[30]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 1e 00 00 00   GIOP............
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 30
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <32>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[32]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 20 00 00 00   GIOP........ ...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 01 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 20 00 00 00   GIOP........ ...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 01 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[32]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 20 00 00 00   GIOP........ ...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 32
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <34>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[34]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 22 00 00 00   GIOP........"...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 07 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 22 00 00 00   GIOP........"...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 07 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[34]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 22 00 00 00   GIOP........"...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 34
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <36>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[36]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 24 00 00 00   GIOP........$...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 06 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 24 00 00 00   GIOP........$...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 06 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[36]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 24 00 00 00   GIOP........$...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 36
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <38>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[38]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 26 00 00 00   GIOP........&...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 05 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 26 00 00 00   GIOP........&...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 05 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[38]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 26 00 00 00   GIOP........&...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 38
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <40>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[40]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 28 00 00 00   GIOP........(...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 08 45               ...........E    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 28 00 00 00   GIOP........(...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 08 45               ...........E    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[40]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 28 00 00 00   GIOP........(...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 40
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <42>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[42]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2a 00 00 00   GIOP........*...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 04 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2a 00 00 00   GIOP........*...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 04 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[42]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 2a 00 00 00   GIOP........*...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 42
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <44>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[44]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2c 00 00 00   GIOP........,...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 03 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2c 00 00 00   GIOP........,...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 03 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[44]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 2c 00 00 00   GIOP........,...
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 44
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
(22249|22251) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22251) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22251) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22251) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22251) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22251) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22251) - Muxed_TMS[12]::request_id, <46>
TAO (22249|22251) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[46]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2e 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 02 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22251) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 2e 00 00 00   GIOP............
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
0d 00 00 00 72 65 6d 6f  76 65 5f 74 6f 70 69 63   ....remove_topic
00 69 70 74 00 00 00 00  2a 00 00 00 01 03 00 00   .ipt....*.......
1e a0 de c0 00 00 00 02  00 00 01 c1 01 03 00 00   ................
1e a0 de c0 00 00 00 02  00 00 02 c5               ............    
TAO (22249|22251) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22251) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22251) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22251) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22251) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22251) - Transport[12]::make_idle
TAO (22249|22251) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 28 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 16 data bytes, my endian, Type Reply[46]
GIOP message - HEXDUMP 28 bytes
47 49 4f 50 01 02 01 01  10 00 00 00 2e 00 00 00   GIOP............
00 00 00 00 00 00 00 00  04 00 00 00               ............    
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 46
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22251) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
(22249|22249) Service_Participant::get_discovery: returning repository for domain 42, repo DEFAULT_REPO.
TAO (22249|22249) - Invocation_Adapter::invoke_i, making a TAO_CS_REMOTE_STRATEGY invocation
TAO (22249|22249) - Transport_Cache_Manager_T::is_entry_available_i[12], true, state is ENTRY_IDLE_AND_PURGABLE
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_IDLE_AND_PURGABLE->ENTRY_BUSY Transport[12] IntId=0x563357497670
TAO (22249|22249) - Transport_Cache_Manager_T::find_i, Found available Transport[12] @hash:index {2130752698:0}
TAO (22249|22249) - TAO_Connector::connect: found a transport [12] busy_count = 0
TAO (22249|22249) - Transport_Connector::connect, got an existing connected Transport[12] in role TAO_CLIENT_ROLE
TAO (22249|22249) - Muxed_TMS[12]::request_id, <48>
TAO (22249|22249) - GIOP_Message_Base::dump_msg, send GIOP message v1.2, 128 data bytes, my endian, Type Request[48]
GIOP message - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 30 00 00 00   GIOP........0...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
1a 00 00 00 72 65 6d 6f  76 65 5f 64 6f 6d 61 69   ....remove_domai
6e 5f 70 61 72 74 69 63  69 70 61 6e 74 00 00 00   n_participant...
00 00 00 00 00 00 00 02  2a 00 00 00 01 03 00 00   ........*.......
1e a0 de c0 00 00 00 02  00 00 01 c1               ............    
TAO (22249|22249) - Transport[12]::drain_queue_helper, sending 1 buffers
TAO (22249|22249) - Transport[12]::drain_queue_helper, buffer 0/1 has 140 bytes
TAO - Transport[12]::drain_queue_helper (0/140) - HEXDUMP 140 bytes
47 49 4f 50 01 02 01 00  80 00 00 00 30 00 00 00   GIOP........0...
03 00 00 00 00 00 00 00  34 00 00 00 14 01 0f 00   ........4.......
4e 55 50 00 00 00 19 00  00 00 00 01 00 00 00 52   NUP............R
6f 6f 74 50 4f 41 00 49  6e 66 6f 52 65 70 6f 00   ootPOA.InfoRepo.
00 00 00 00 01 00 00 00  49 6e 66 6f 52 65 70 6f   ........InfoRepo
1a 00 00 00 72 65 6d 6f  76 65 5f 64 6f 6d 61 69   ....remove_domai
6e 5f 70 61 72 74 69 63  69 70 61 6e 74 00 00 00   n_participant...
00 00 00 00 00 00 00 02  2a 00 00 00 01 03 00 00   ........*.......
1e a0 de c0 00 00 00 02  00 00 01 c1               ............    
TAO (22249|22249) - Transport[12]::drain_queue_helper, end of data
TAO (22249|22249) - Transport[12]::cleanup_queue, byte_count = 140
TAO (22249|22249) - Transport[12]::cleanup_queue, after transfer, bc = 0, all_sent = 1, ml = 0
TAO (22249|22249) - Transport[12]::drain_queue_helper, byte_count = 140, head_is_empty = 1
TAO (22249|22249) - Transport[12]::drain_queue_i, helper retval = 1
TAO (22249|22249) - Transport[12]::make_idle
TAO (22249|22249) - Cache_IntId_T::recycle_state, ENTRY_BUSY->ENTRY_IDLE_AND_PURGABLE Transport[12] IntId=0x563357497670
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, (follower), cond <0x56335748c0f0>
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12
TAO (22249|22252) - Transport[12]::handle_input
TAO (22249|22252) - Transport[12]::process_queue_head, 0 enqueued
TAO (22249|22252) - Transport[12]::handle_input_parse_data, enter
TAO (22249|22252) - Transport[12]::handle_input_parse_data, read 24 bytes
TAO (22249|22252) - GIOP_Message_State::parse_message_header_i
TAO (22249|22252) - GIOP_Message_State::get_version_info
TAO (22249|22252) - GIOP_Message_State::get_byte_order_info
TAO (22249|22252) - Transport[12]::process_parsed_messages, entering (missing data == 0)
TAO (22249|22252) - GIOP_Message_Base::dump_msg, Transport[12] recv GIOP message v1.2, 12 data bytes, my endian, Type Reply[48]
GIOP message - HEXDUMP 24 bytes
47 49 4f 50 01 02 01 01  0c 00 00 00 30 00 00 00   GIOP........0...
00 00 00 00 00 00 00 00                            ........        
TAO (22249|22252) - TAO_Muxed_TMS::dispatch_reply, id = 48
TAO (22249|22252) - Connection_Handler[12]::handle_input_internal, handle = 12/12, retval = 0
TAO (22249|22249) - Leader_Follower[12]::wait_for_event, done (follower), successful 1
(22249|22249) Cached_Allocator_With_Overflow::malloc 0x7fb628005c78 48 pool allocs 48 pool free with 1000 available
(22249|22249) ReactorSynch::~ReactorSynch() [0] - dismantling synch without worker.
TAO (22249|22249) - Connection_Handler[12]::close_connection_eh, purging entry from cache
TAO (22249|22249) - Transport[12]::pre_close
TAO (22249|22249) - Transport[12]::purge_entry, entry is (nil)
TAO (22249|22249) - Transport[12]::cleanup_queue_i, cleaning up complete queue
TAO (22249|22249) - Transport[12]::cleanup_queue_i, discarded 0 messages, 0 bytes.
TAO (22249|22249) - Connection_Handler[12]::close_connection_eh, removing from the reactor
TAO (22249|22249) - Connection_Handler[12]::close_connection_eh, cancel all timers
TAO (22249|22249) - Transport[12]::cleanup_queue_i, cleaning up complete queue
TAO (22249|22249) - Transport[12]::cleanup_queue_i, discarded 0 messages, 0 bytes.
TAO (22249|22249) - TAO_LF_CH_Event[12]::state_changed_i, state LFS_SUCCESS->LFS_CONNECTION_CLOSED
TAO (22249|22249) - Connection_Handler[12]::close_connection_eh end
TAO (22249|22249) - IIOP_Connection_Handler[12]::~IIOP_Connection_Handler, this=0x56335748ad70, transport=0x56335748aee0
TAO (22249|22249) - Transport[12]::~Transport
TAO (22249|22249) - Transport[12]::cleanup_queue_i, cleaning up complete queue
TAO (22249|22249) - Transport[12]::cleanup_queue_i, discarded 0 messages, 0 bytes.
CORBA::ORB::destroy() called on ORB <OpenDDS_DCPS>.
TAO (22249|22249) - Destroying ORB <OpenDDS_DCPS>
(22249|22249) TransportClient::~TransportClient: 01030000.1ea0dec0.00000002.00000507(2736ba23)
(22249|22249) DomainParticipantFactoryImpl::~DomainParticipantFactoryImpl()
(22249|22249) Service_Participant::~Service_Participant()
